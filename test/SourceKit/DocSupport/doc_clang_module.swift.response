import Foo.FooSub
import FooHelper

struct FooEnum1 : Equatable, RawRepresentable {

    init(_ rawValue: UInt32)

    init(rawValue rawValue: UInt32)

    var rawValue: UInt32

    static func != (_ lhs: FooEnum1, _ rhs: FooEnum1) -> Bool
}
var FooEnum1X: FooEnum1 { get }
struct FooEnum2 : Equatable, RawRepresentable {

    init(_ rawValue: UInt32)

    init(rawValue rawValue: UInt32)

    var rawValue: UInt32

    static func != (_ lhs: FooEnum2, _ rhs: FooEnum2) -> Bool
}
var FooEnum2X: FooEnum2 { get }
var FooEnum2Y: FooEnum2 { get }
struct FooEnum3 : Equatable, RawRepresentable {

    init(_ rawValue: UInt32)

    init(rawValue rawValue: UInt32)

    var rawValue: UInt32

    static func != (_ lhs: FooEnum3, _ rhs: FooEnum3) -> Bool
}
var FooEnum3X: FooEnum3 { get }
var FooEnum3Y: FooEnum3 { get }
enum FooComparisonResult : Int {

    case orderedAscending

    case orderedSame

    case orderedDescending

    static func != (_ lhs: FooComparisonResult, _ rhs: FooComparisonResult) -> Bool
}
struct FooRuncingOptions : OptionSet {

    init(rawValue rawValue: Int)

    static var enableMince: FooRuncingOptions { get }

    static var enableQuince: FooRuncingOptions { get }

    static func != (_ lhs: FooRuncingOptions, _ rhs: FooRuncingOptions) -> Bool

    @inlinable init(arrayLiteral arrayLiteral: FooRuncingOptions...)
}

extension FooRuncingOptions {

    @inlinable init<S>(_ sequence: S) where S : Sequence, Element == S.Element

    @inlinable mutating func subtract(_ other: FooRuncingOptions)

    @inlinable func isSubset(of other: FooRuncingOptions) -> Bool

    @inlinable func isSuperset(of other: FooRuncingOptions) -> Bool

    @inlinable func isDisjoint(with other: FooRuncingOptions) -> Bool

    @inlinable func subtracting(_ other: FooRuncingOptions) -> FooRuncingOptions

    @inlinable var isEmpty: Bool { get }

    @inlinable func isStrictSuperset(of other: FooRuncingOptions) -> Bool

    @inlinable func isStrictSubset(of other: FooRuncingOptions) -> Bool
}

extension FooRuncingOptions {

    @inlinable func union(_ other: FooRuncingOptions) -> FooRuncingOptions

    @inlinable func intersection(_ other: FooRuncingOptions) -> FooRuncingOptions

    @inlinable func symmetricDifference(_ other: FooRuncingOptions) -> FooRuncingOptions
}

extension FooRuncingOptions {

    @inlinable func contains(_ member: FooRuncingOptions) -> Bool

    @inlinable mutating func insert(_ newMember: FooRuncingOptions) -> (inserted: Bool, memberAfterInsert: FooRuncingOptions)

    @inlinable mutating func remove(_ member: FooRuncingOptions) -> FooRuncingOptions?

    @inlinable mutating func update(with newMember: FooRuncingOptions) -> FooRuncingOptions?
}

extension FooRuncingOptions {

    @inlinable init()

    @inlinable mutating func formUnion(_ other: FooRuncingOptions)

    @inlinable mutating func formIntersection(_ other: FooRuncingOptions)

    @inlinable mutating func formSymmetricDifference(_ other: FooRuncingOptions)
}
struct FooStruct1 {

    var x: Int32

    var y: Double

    init()

    init(x x: Int32, y y: Double)
}
typealias FooStruct1Pointer = UnsafeMutablePointer<FooStruct1>
struct FooStruct2 {

    var x: Int32

    var y: Double

    init()

    init(x x: Int32, y y: Double)
}
typealias FooStructTypedef1 = FooStruct2
struct FooStructTypedef2 {

    var x: Int32

    var y: Double

    init()

    init(x x: Int32, y y: Double)
}
typealias FooTypedef1 = Int32
var fooIntVar: Int32
func fooFunc1(_ a: Int32) -> Int32
func fooFunc1AnonymousParam(_ _: Int32) -> Int32
func fooFunc3(_ a: Int32, _ b: Float, _ c: Double, _ d: UnsafeMutablePointer<Int32>!) -> Int32
func fooFuncWithBlock(_ blk: ((Float) -> Int32)!)
func fooFuncWithFunctionPointer(_ fptr: ((Float) -> Int32)!)
func fooFuncNoreturn1() -> Never
func fooFuncNoreturn2() -> Never
func fooFuncWithComment1()
func fooFuncWithComment2()
func fooFuncWithComment3()
func fooFuncWithComment4()
func fooFuncWithComment5()
func redeclaredInMultipleModulesFunc1(_ a: Int32) -> Int32
protocol FooProtocolBase {

    func fooProtoFunc()

    func fooProtoFuncWithExtraIndentation1()

    func fooProtoFuncWithExtraIndentation2()

    static func fooProtoClassFunc()

    var fooProperty1: Int32 { get set }

    var fooProperty2: Int32 { get set }

    var fooProperty3: Int32 { get }
}
protocol FooProtocolDerived : FooProtocolBase {
}
class FooClassBase {

    func fooBaseInstanceFunc0()

    func fooBaseInstanceFunc1(_ anObject: Any!) -> FooClassBase!

    init!()

    convenience init!(float f: Float)

    func fooBaseInstanceFuncOverridden()

    class func fooBaseClassFunc0()

    func _internalMeth1() -> Any!

    func _internalMeth2() -> Any!

    func nonInternalMeth() -> Any!

    func _internalMeth3() -> Any!
}
class FooClassDerived : FooClassBase, FooProtocolDerived {

    var fooProperty1: Int32

    var fooProperty2: Int32

    var fooProperty3: Int32 { get }

    func fooInstanceFunc0()

    func fooInstanceFunc1(_ a: Int32)

    func fooInstanceFunc2(_ a: Int32, withB b: Int32)

    func fooBaseInstanceFuncOverridden()

    class func fooClassFunc0()

    func _internalMeth1() -> Any!

    func _internalMeth2() -> Any!

    func nonInternalMeth() -> Any!

    func _internalMeth3() -> Any!
}
typealias typedef_int_t = Int32
var FOO_MACRO_1: Int32 { get }
var FOO_MACRO_2: Int32 { get }
var FOO_MACRO_3: Int32 { get }
var FOO_MACRO_4: UInt32 { get }
var FOO_MACRO_5: UInt64 { get }
var FOO_MACRO_6: typedef_int_t { get }
var FOO_MACRO_7: typedef_int_t { get }
var FOO_MACRO_8: Int8 { get }
var FOO_MACRO_9: Int32 { get }
var FOO_MACRO_10: Int16 { get }
var FOO_MACRO_11: Int { get }
var FOO_MACRO_OR: Int32 { get }
var FOO_MACRO_AND: Int32 { get }
var FOO_MACRO_BITWIDTH: UInt64 { get }
var FOO_MACRO_SIGNED: UInt32 { get }
var FOO_MACRO_REDEF_1: Int32 { get }
var FOO_MACRO_REDEF_2: Int32 { get }
func theLastDeclInFoo()
func _internalTopLevelFunc()
struct _InternalStruct {

    var x: Int32

    init()

    init(x x: Int32)
}
extension FooClassBase {

    func _internalMeth1() -> Any!
}
extension FooClassBase {

    func _internalMeth2() -> Any!

    func nonInternalMeth() -> Any!
}
extension FooClassBase {

    func _internalMeth3() -> Any!
}
protocol _InternalProt {
}
class ClassWithInternalProt : _InternalProt {
}
class FooClassPropertyOwnership : FooClassBase {

    unowned(unsafe) var assignable: AnyObject!

    unowned(unsafe) var unsafeAssignable: AnyObject!

    var retainable: Any!

    var strongRef: Any!

    var copyable: Any!

    weak var weakRef: AnyObject!

    var scalar: Int32

    func _internalMeth1() -> Any!

    func _internalMeth2() -> Any!

    func nonInternalMeth() -> Any!

    func _internalMeth3() -> Any!
}
var FOO_NIL: ()
class FooUnavailableMembers : FooClassBase {

    convenience init!(int i: Int32)

    func unavailable()

    func swiftUnavailable()

    func deprecated()

    func availabilityIntroduced()

    func availabilityDeprecated()

    func availabilityObsoleted()

    func availabilityUnavailable()

    func availabilityIntroducedMsg()

    func availabilityDeprecatedMsg()

    func availabilityObsoletedMsg()

    func availabilityUnavailableMsg()

    func _internalMeth1() -> Any!

    func _internalMeth2() -> Any!

    func nonInternalMeth() -> Any!

    func _internalMeth3() -> Any!
}
class FooCFType {
}
func FooCFTypeRelease(_ _: FooCFType!)
enum ABAuthorizationStatus : Int {

    case notDetermined

    case restricted

    static func != (_ lhs: ABAuthorizationStatus, _ rhs: ABAuthorizationStatus) -> Bool
}
func fooSubFunc1(_ a: Int32) -> Int32
struct FooSubEnum1 : Equatable, RawRepresentable {

    init(_ rawValue: UInt32)

    init(rawValue rawValue: UInt32)

    var rawValue: UInt32

    static func != (_ lhs: FooSubEnum1, _ rhs: FooSubEnum1) -> Bool
}
var FooSubEnum1X: FooSubEnum1 { get }
var FooSubEnum1Y: FooSubEnum1 { get }
var FooSubUnnamedEnumeratorA1: Int { get }

[
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 0,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 7,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 11,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 18,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 25,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 36,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 43,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.ref.protocol,
    key.name: "Equatable",
    key.usr: "s:SQ",
    key.offset: 54,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.ref.protocol,
    key.name: "RawRepresentable",
    key.usr: "s:SY",
    key.offset: 65,
    key.length: 16
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 89,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 94,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 96,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "UInt32",
    key.usr: "s:s6UInt32V",
    key.offset: 106,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 119,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 124,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 133,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "UInt32",
    key.usr: "s:s6UInt32V",
    key.offset: 143,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 156,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 160,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "UInt32",
    key.usr: "s:s6UInt32V",
    key.offset: 170,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 182,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 189,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 198,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 200,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "FooEnum1",
    key.usr: "c:@E@FooEnum1",
    key.offset: 205,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 215,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 217,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "FooEnum1",
    key.usr: "c:@E@FooEnum1",
    key.offset: 222,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Bool",
    key.usr: "s:Sb",
    key.offset: 235,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 242,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 246,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "FooEnum1",
    key.usr: "c:@E@FooEnum1",
    key.offset: 257,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 268,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 274,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 281,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.ref.protocol,
    key.name: "Equatable",
    key.usr: "s:SQ",
    key.offset: 292,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.ref.protocol,
    key.name: "RawRepresentable",
    key.usr: "s:SY",
    key.offset: 303,
    key.length: 16
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 327,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 332,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 334,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "UInt32",
    key.usr: "s:s6UInt32V",
    key.offset: 344,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 357,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 362,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 371,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "UInt32",
    key.usr: "s:s6UInt32V",
    key.offset: 381,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 394,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 398,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "UInt32",
    key.usr: "s:s6UInt32V",
    key.offset: 408,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 420,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 427,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 436,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 438,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "FooEnum2",
    key.usr: "c:@E@FooEnum2",
    key.offset: 443,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 453,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 455,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "FooEnum2",
    key.usr: "c:@E@FooEnum2",
    key.offset: 460,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Bool",
    key.usr: "s:Sb",
    key.offset: 473,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 480,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 484,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "FooEnum2",
    key.usr: "c:@E@FooEnum2",
    key.offset: 495,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 506,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 512,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 516,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "FooEnum2",
    key.usr: "c:@E@FooEnum2",
    key.offset: 527,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 538,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 544,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 551,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.ref.protocol,
    key.name: "Equatable",
    key.usr: "s:SQ",
    key.offset: 562,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.ref.protocol,
    key.name: "RawRepresentable",
    key.usr: "s:SY",
    key.offset: 573,
    key.length: 16
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 597,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 602,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 604,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "UInt32",
    key.usr: "s:s6UInt32V",
    key.offset: 614,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 627,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 632,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 641,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "UInt32",
    key.usr: "s:s6UInt32V",
    key.offset: 651,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 664,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 668,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "UInt32",
    key.usr: "s:s6UInt32V",
    key.offset: 678,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 690,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 697,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 706,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 708,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "FooEnum3",
    key.usr: "c:@E@FooEnum3",
    key.offset: 713,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 723,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 725,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "FooEnum3",
    key.usr: "c:@E@FooEnum3",
    key.offset: 730,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Bool",
    key.usr: "s:Sb",
    key.offset: 743,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 750,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 754,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "FooEnum3",
    key.usr: "c:@E@FooEnum3",
    key.offset: 765,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 776,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 782,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 786,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "FooEnum3",
    key.usr: "c:@E@FooEnum3",
    key.offset: 797,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 808,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 814,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 819,
    key.length: 19
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 841,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 852,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 857,
    key.length: 16
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 879,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 884,
    key.length: 11
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 901,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 906,
    key.length: 17
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 929,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 936,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 945,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 947,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.ref.enum,
    key.name: "FooComparisonResult",
    key.usr: "c:@E@FooComparisonResult",
    key.offset: 952,
    key.length: 19
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 973,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 975,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.ref.enum,
    key.name: "FooComparisonResult",
    key.usr: "c:@E@FooComparisonResult",
    key.offset: 980,
    key.length: 19
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Bool",
    key.usr: "s:Sb",
    key.offset: 1004,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1011,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1018,
    key.length: 17
  },
  {
    key.kind: source.lang.swift.ref.protocol,
    key.name: "OptionSet",
    key.usr: "s:s9OptionSetP",
    key.offset: 1038,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1055,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 1060,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 1069,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 1079,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1089,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1096,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1100,
    key.length: 11
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "FooRuncingOptions",
    key.usr: "c:@E@FooRuncingOptions",
    key.offset: 1113,
    key.length: 17
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1133,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1144,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1151,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1155,
    key.length: 12
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "FooRuncingOptions",
    key.usr: "c:@E@FooRuncingOptions",
    key.offset: 1169,
    key.length: 17
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1189,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1200,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1207,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 1216,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 1218,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "FooRuncingOptions",
    key.usr: "c:@E@FooRuncingOptions",
    key.offset: 1223,
    key.length: 17
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 1242,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 1244,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "FooRuncingOptions",
    key.usr: "c:@E@FooRuncingOptions",
    key.offset: 1249,
    key.length: 17
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Bool",
    key.usr: "s:Sb",
    key.offset: 1271,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.attribute.builtin,
    key.offset: 1281,
    key.length: 10
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1292,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 1297,
    key.length: 12
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 1310,
    key.length: 12
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "FooRuncingOptions",
    key.usr: "c:@E@FooRuncingOptions",
    key.offset: 1324,
    key.length: 17
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1349,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "FooRuncingOptions",
    key.usr: "c:@E@FooRuncingOptions",
    key.offset: 1359,
    key.length: 17
  },
  {
    key.kind: source.lang.swift.syntaxtype.attribute.builtin,
    key.offset: 1384,
    key.length: 10
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1395,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1400,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 1403,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 1405,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.syntaxtype.typeidentifier,
    key.offset: 1415,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1418,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.typeidentifier,
    key.offset: 1424,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.ref.protocol,
    key.name: "Sequence",
    key.usr: "s:ST",
    key.offset: 1428,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.ref.typealias,
    key.name: "Element",
    key.usr: "s:So17FooRuncingOptionsV7Elementa",
    key.offset: 1438,
    key.length: 7
  },
  {
    key.kind: source.lang.swift.syntaxtype.typeidentifier,
    key.offset: 1449,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.typeidentifier,
    key.offset: 1451,
    key.length: 7
  },
  {
    key.kind: source.lang.swift.syntaxtype.attribute.builtin,
    key.offset: 1464,
    key.length: 10
  },
  {
    key.kind: source.lang.swift.syntaxtype.attribute.builtin,
    key.offset: 1475,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1484,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1489,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 1498,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 1500,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "FooRuncingOptions",
    key.usr: "c:@E@FooRuncingOptions",
    key.offset: 1507,
    key.length: 17
  },
  {
    key.kind: source.lang.swift.syntaxtype.attribute.builtin,
    key.offset: 1531,
    key.length: 10
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1542,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1547,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 1556,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 1559,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "FooRuncingOptions",
    key.usr: "c:@E@FooRuncingOptions",
    key.offset: 1566,
    key.length: 17
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Bool",
    key.usr: "s:Sb",
    key.offset: 1588,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.attribute.builtin,
    key.offset: 1598,
    key.length: 10
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1609,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1614,
    key.length: 10
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 1625,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 1628,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "FooRuncingOptions",
    key.usr: "c:@E@FooRuncingOptions",
    key.offset: 1635,
    key.length: 17
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Bool",
    key.usr: "s:Sb",
    key.offset: 1657,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.attribute.builtin,
    key.offset: 1667,
    key.length: 10
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1678,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1683,
    key.length: 10
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 1694,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 1699,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "FooRuncingOptions",
    key.usr: "c:@E@FooRuncingOptions",
    key.offset: 1706,
    key.length: 17
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Bool",
    key.usr: "s:Sb",
    key.offset: 1728,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.attribute.builtin,
    key.offset: 1738,
    key.length: 10
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1749,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1754,
    key.length: 11
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 1766,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 1768,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "FooRuncingOptions",
    key.usr: "c:@E@FooRuncingOptions",
    key.offset: 1775,
    key.length: 17
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "FooRuncingOptions",
    key.usr: "c:@E@FooRuncingOptions",
    key.offset: 1797,
    key.length: 17
  },
  {
    key.kind: source.lang.swift.syntaxtype.attribute.builtin,
    key.offset: 1820,
    key.length: 10
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1831,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1835,
    key.length: 7
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Bool",
    key.usr: "s:Sb",
    key.offset: 1844,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1851,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.attribute.builtin,
    key.offset: 1862,
    key.length: 10
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1873,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1878,
    key.length: 16
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 1895,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 1898,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "FooRuncingOptions",
    key.usr: "c:@E@FooRuncingOptions",
    key.offset: 1905,
    key.length: 17
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Bool",
    key.usr: "s:Sb",
    key.offset: 1927,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.attribute.builtin,
    key.offset: 1937,
    key.length: 10
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 1948,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 1953,
    key.length: 14
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 1968,
    key.length: 2
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 1971,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "FooRuncingOptions",
    key.usr: "c:@E@FooRuncingOptions",
    key.offset: 1978,
    key.length: 17
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Bool",
    key.usr: "s:Sb",
    key.offset: 2000,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 2008,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "FooRuncingOptions",
    key.usr: "c:@E@FooRuncingOptions",
    key.offset: 2018,
    key.length: 17
  },
  {
    key.kind: source.lang.swift.syntaxtype.attribute.builtin,
    key.offset: 2043,
    key.length: 10
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 2054,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 2059,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 2065,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 2067,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "FooRuncingOptions",
    key.usr: "c:@E@FooRuncingOptions",
    key.offset: 2074,
    key.length: 17
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "FooRuncingOptions",
    key.usr: "c:@E@FooRuncingOptions",
    key.offset: 2096,
    key.length: 17
  },
  {
    key.kind: source.lang.swift.syntaxtype.attribute.builtin,
    key.offset: 2119,
    key.length: 10
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 2130,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 2135,
    key.length: 12
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 2148,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 2150,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "FooRuncingOptions",
    key.usr: "c:@E@FooRuncingOptions",
    key.offset: 2157,
    key.length: 17
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "FooRuncingOptions",
    key.usr: "c:@E@FooRuncingOptions",
    key.offset: 2179,
    key.length: 17
  },
  {
    key.kind: source.lang.swift.syntaxtype.attribute.builtin,
    key.offset: 2202,
    key.length: 10
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 2213,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 2218,
    key.length: 19
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 2238,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 2240,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "FooRuncingOptions",
    key.usr: "c:@E@FooRuncingOptions",
    key.offset: 2247,
    key.length: 17
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "FooRuncingOptions",
    key.usr: "c:@E@FooRuncingOptions",
    key.offset: 2269,
    key.length: 17
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 2290,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "FooRuncingOptions",
    key.usr: "c:@E@FooRuncingOptions",
    key.offset: 2300,
    key.length: 17
  },
  {
    key.kind: source.lang.swift.syntaxtype.attribute.builtin,
    key.offset: 2325,
    key.length: 10
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 2336,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 2341,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 2350,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 2352,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "FooRuncingOptions",
    key.usr: "c:@E@FooRuncingOptions",
    key.offset: 2360,
    key.length: 17
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Bool",
    key.usr: "s:Sb",
    key.offset: 2382,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.attribute.builtin,
    key.offset: 2392,
    key.length: 10
  },
  {
    key.kind: source.lang.swift.syntaxtype.attribute.builtin,
    key.offset: 2403,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 2412,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 2417,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 2424,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 2426,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "FooRuncingOptions",
    key.usr: "c:@E@FooRuncingOptions",
    key.offset: 2437,
    key.length: 17
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 2460,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Bool",
    key.usr: "s:Sb",
    key.offset: 2470,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 2476,
    key.length: 17
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "FooRuncingOptions",
    key.usr: "c:@E@FooRuncingOptions",
    key.offset: 2495,
    key.length: 17
  },
  {
    key.kind: source.lang.swift.syntaxtype.attribute.builtin,
    key.offset: 2519,
    key.length: 10
  },
  {
    key.kind: source.lang.swift.syntaxtype.attribute.builtin,
    key.offset: 2530,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 2539,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 2544,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 2551,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 2553,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "FooRuncingOptions",
    key.usr: "c:@E@FooRuncingOptions",
    key.offset: 2561,
    key.length: 17
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "FooRuncingOptions",
    key.usr: "c:@E@FooRuncingOptions",
    key.offset: 2583,
    key.length: 17
  },
  {
    key.kind: source.lang.swift.syntaxtype.attribute.builtin,
    key.offset: 2607,
    key.length: 10
  },
  {
    key.kind: source.lang.swift.syntaxtype.attribute.builtin,
    key.offset: 2618,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 2627,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 2632,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 2639,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 2644,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "FooRuncingOptions",
    key.usr: "c:@E@FooRuncingOptions",
    key.offset: 2655,
    key.length: 17
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "FooRuncingOptions",
    key.usr: "c:@E@FooRuncingOptions",
    key.offset: 2677,
    key.length: 17
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 2699,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "FooRuncingOptions",
    key.usr: "c:@E@FooRuncingOptions",
    key.offset: 2709,
    key.length: 17
  },
  {
    key.kind: source.lang.swift.syntaxtype.attribute.builtin,
    key.offset: 2734,
    key.length: 10
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 2745,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.attribute.builtin,
    key.offset: 2757,
    key.length: 10
  },
  {
    key.kind: source.lang.swift.syntaxtype.attribute.builtin,
    key.offset: 2768,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 2777,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 2782,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 2792,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 2794,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "FooRuncingOptions",
    key.usr: "c:@E@FooRuncingOptions",
    key.offset: 2801,
    key.length: 17
  },
  {
    key.kind: source.lang.swift.syntaxtype.attribute.builtin,
    key.offset: 2825,
    key.length: 10
  },
  {
    key.kind: source.lang.swift.syntaxtype.attribute.builtin,
    key.offset: 2836,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 2845,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 2850,
    key.length: 16
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 2867,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 2869,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "FooRuncingOptions",
    key.usr: "c:@E@FooRuncingOptions",
    key.offset: 2876,
    key.length: 17
  },
  {
    key.kind: source.lang.swift.syntaxtype.attribute.builtin,
    key.offset: 2900,
    key.length: 10
  },
  {
    key.kind: source.lang.swift.syntaxtype.attribute.builtin,
    key.offset: 2911,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 2920,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 2925,
    key.length: 23
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 2949,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 2951,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "FooRuncingOptions",
    key.usr: "c:@E@FooRuncingOptions",
    key.offset: 2958,
    key.length: 17
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 2979,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 2986,
    key.length: 10
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 3004,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 3008,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int32",
    key.usr: "s:s5Int32V",
    key.offset: 3011,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 3022,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 3026,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Double",
    key.usr: "s:Sd",
    key.offset: 3029,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 3041,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 3053,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 3058,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 3060,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int32",
    key.usr: "s:s5Int32V",
    key.offset: 3063,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 3070,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 3072,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Double",
    key.usr: "s:Sd",
    key.offset: 3075,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 3085,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 3095,
    key.length: 17
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "UnsafeMutablePointer",
    key.usr: "s:Sp",
    key.offset: 3115,
    key.length: 20
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "FooStruct1",
    key.usr: "c:@S@FooStruct1",
    key.offset: 3136,
    key.length: 10
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 3148,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 3155,
    key.length: 10
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 3173,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 3177,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int32",
    key.usr: "s:s5Int32V",
    key.offset: 3180,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 3191,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 3195,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Double",
    key.usr: "s:Sd",
    key.offset: 3198,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 3210,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 3222,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 3227,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 3229,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int32",
    key.usr: "s:s5Int32V",
    key.offset: 3232,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 3239,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 3241,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Double",
    key.usr: "s:Sd",
    key.offset: 3244,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 3254,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 3264,
    key.length: 17
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "FooStruct2",
    key.usr: "c:@S@FooStruct2",
    key.offset: 3284,
    key.length: 10
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 3295,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 3302,
    key.length: 17
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 3327,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 3331,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int32",
    key.usr: "s:s5Int32V",
    key.offset: 3334,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 3345,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 3349,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Double",
    key.usr: "s:Sd",
    key.offset: 3352,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 3364,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 3376,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 3381,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 3383,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int32",
    key.usr: "s:s5Int32V",
    key.offset: 3386,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 3393,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 3395,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Double",
    key.usr: "s:Sd",
    key.offset: 3398,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 3408,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 3418,
    key.length: 11
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int32",
    key.usr: "s:s5Int32V",
    key.offset: 3432,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 3438,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 3442,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int32",
    key.usr: "s:s5Int32V",
    key.offset: 3453,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 3459,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 3464,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 3473,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 3475,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int32",
    key.usr: "s:s5Int32V",
    key.offset: 3478,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int32",
    key.usr: "s:s5Int32V",
    key.offset: 3488,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 3494,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 3499,
    key.length: 22
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 3522,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 3524,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int32",
    key.usr: "s:s5Int32V",
    key.offset: 3527,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int32",
    key.usr: "s:s5Int32V",
    key.offset: 3537,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 3543,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 3548,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 3557,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 3559,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int32",
    key.usr: "s:s5Int32V",
    key.offset: 3562,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 3569,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 3571,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Float",
    key.usr: "s:Sf",
    key.offset: 3574,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 3581,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 3583,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Double",
    key.usr: "s:Sd",
    key.offset: 3586,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 3594,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 3596,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "UnsafeMutablePointer",
    key.usr: "s:Sp",
    key.offset: 3599,
    key.length: 20
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int32",
    key.usr: "s:s5Int32V",
    key.offset: 3620,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int32",
    key.usr: "s:s5Int32V",
    key.offset: 3632,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 3638,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 3643,
    key.length: 16
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 3660,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 3662,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Float",
    key.usr: "s:Sf",
    key.offset: 3669,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int32",
    key.usr: "s:s5Int32V",
    key.offset: 3679,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 3688,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 3693,
    key.length: 26
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 3720,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 3722,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Float",
    key.usr: "s:Sf",
    key.offset: 3730,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int32",
    key.usr: "s:s5Int32V",
    key.offset: 3740,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 3749,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 3754,
    key.length: 16
  },
  {
    key.kind: source.lang.swift.ref.enum,
    key.name: "Never",
    key.usr: "s:s5NeverO",
    key.offset: 3776,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 3782,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 3787,
    key.length: 16
  },
  {
    key.kind: source.lang.swift.ref.enum,
    key.name: "Never",
    key.usr: "s:s5NeverO",
    key.offset: 3809,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 3815,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 3820,
    key.length: 19
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 3842,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 3847,
    key.length: 19
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 3869,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 3874,
    key.length: 19
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 3896,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 3901,
    key.length: 19
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 3923,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 3928,
    key.length: 19
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 3950,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 3955,
    key.length: 32
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 3988,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 3990,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int32",
    key.usr: "s:s5Int32V",
    key.offset: 3993,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int32",
    key.usr: "s:s5Int32V",
    key.offset: 4003,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 4009,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 4018,
    key.length: 15
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 4041,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 4046,
    key.length: 12
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 4066,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 4071,
    key.length: 33
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 4112,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 4117,
    key.length: 33
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 4158,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 4165,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 4170,
    key.length: 17
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 4195,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 4199,
    key.length: 12
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int32",
    key.usr: "s:s5Int32V",
    key.offset: 4213,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 4221,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 4225,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 4236,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 4240,
    key.length: 12
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int32",
    key.usr: "s:s5Int32V",
    key.offset: 4254,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 4262,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 4266,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 4277,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 4281,
    key.length: 12
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int32",
    key.usr: "s:s5Int32V",
    key.offset: 4295,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 4303,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 4311,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 4320,
    key.length: 18
  },
  {
    key.kind: source.lang.swift.ref.protocol,
    key.name: "FooProtocolBase",
    key.usr: "c:objc(pl)FooProtocolBase",
    key.offset: 4341,
    key.length: 15
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 4361,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 4367,
    key.length: 12
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 4387,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 4392,
    key.length: 20
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 4420,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 4425,
    key.length: 20
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 4446,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 4448,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 4458,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.ref.class,
    key.name: "FooClassBase",
    key.usr: "c:objc(cs)FooClassBase",
    key.offset: 4467,
    key.length: 12
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 4486,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.attribute.builtin,
    key.offset: 4499,
    key.length: 11
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 4511,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 4517,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 4523,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Float",
    key.usr: "s:Sf",
    key.offset: 4526,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 4538,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 4543,
    key.length: 29
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 4580,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 4586,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 4591,
    key.length: 17
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 4616,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 4621,
    key.length: 14
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 4641,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 4651,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 4656,
    key.length: 14
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 4676,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 4686,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 4691,
    key.length: 15
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 4712,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 4722,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 4727,
    key.length: 14
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 4747,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 4754,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 4760,
    key.length: 15
  },
  {
    key.kind: source.lang.swift.ref.class,
    key.name: "FooClassBase",
    key.usr: "c:objc(cs)FooClassBase",
    key.offset: 4778,
    key.length: 12
  },
  {
    key.kind: source.lang.swift.ref.protocol,
    key.name: "FooProtocolDerived",
    key.usr: "c:objc(pl)FooProtocolDerived",
    key.offset: 4792,
    key.length: 18
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 4818,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 4822,
    key.length: 12
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int32",
    key.usr: "s:s5Int32V",
    key.offset: 4836,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 4847,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 4851,
    key.length: 12
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int32",
    key.usr: "s:s5Int32V",
    key.offset: 4865,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 4876,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 4880,
    key.length: 12
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int32",
    key.usr: "s:s5Int32V",
    key.offset: 4894,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 4902,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 4913,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 4918,
    key.length: 16
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 4942,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 4947,
    key.length: 16
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 4964,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 4966,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int32",
    key.usr: "s:s5Int32V",
    key.offset: 4969,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 4981,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 4986,
    key.length: 16
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 5003,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 5005,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int32",
    key.usr: "s:s5Int32V",
    key.offset: 5008,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 5015,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 5021,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int32",
    key.usr: "s:s5Int32V",
    key.offset: 5024,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5036,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 5041,
    key.length: 29
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5078,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5084,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 5089,
    key.length: 13
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5110,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 5115,
    key.length: 14
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5135,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5145,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 5150,
    key.length: 14
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5170,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5180,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 5185,
    key.length: 15
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5206,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5216,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 5221,
    key.length: 14
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5241,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5248,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 5258,
    key.length: 13
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int32",
    key.usr: "s:s5Int32V",
    key.offset: 5274,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5280,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 5284,
    key.length: 11
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int32",
    key.usr: "s:s5Int32V",
    key.offset: 5297,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5305,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5311,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 5315,
    key.length: 11
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int32",
    key.usr: "s:s5Int32V",
    key.offset: 5328,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5336,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5342,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 5346,
    key.length: 11
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int32",
    key.usr: "s:s5Int32V",
    key.offset: 5359,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5367,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5373,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 5377,
    key.length: 11
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "UInt32",
    key.usr: "s:s6UInt32V",
    key.offset: 5390,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5399,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5405,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 5409,
    key.length: 11
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "UInt64",
    key.usr: "s:s6UInt64V",
    key.offset: 5422,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5431,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5437,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 5441,
    key.length: 11
  },
  {
    key.kind: source.lang.swift.ref.typealias,
    key.name: "typedef_int_t",
    key.usr: "c:Foo.h@T@typedef_int_t",
    key.offset: 5454,
    key.length: 13
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5470,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5476,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 5480,
    key.length: 11
  },
  {
    key.kind: source.lang.swift.ref.typealias,
    key.name: "typedef_int_t",
    key.usr: "c:Foo.h@T@typedef_int_t",
    key.offset: 5493,
    key.length: 13
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5509,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5515,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 5519,
    key.length: 11
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int8",
    key.usr: "s:s4Int8V",
    key.offset: 5532,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5539,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5545,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 5549,
    key.length: 11
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int32",
    key.usr: "s:s5Int32V",
    key.offset: 5562,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5570,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5576,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 5580,
    key.length: 12
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int16",
    key.usr: "s:s5Int16V",
    key.offset: 5594,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5602,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5608,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 5612,
    key.length: 12
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 5626,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5632,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5638,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 5642,
    key.length: 12
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int32",
    key.usr: "s:s5Int32V",
    key.offset: 5656,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5664,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5670,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 5674,
    key.length: 13
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int32",
    key.usr: "s:s5Int32V",
    key.offset: 5689,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5697,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5703,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 5707,
    key.length: 18
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "UInt64",
    key.usr: "s:s6UInt64V",
    key.offset: 5727,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5736,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5742,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 5746,
    key.length: 16
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "UInt32",
    key.usr: "s:s6UInt32V",
    key.offset: 5764,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5773,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5779,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 5783,
    key.length: 17
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int32",
    key.usr: "s:s5Int32V",
    key.offset: 5802,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5810,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5816,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 5820,
    key.length: 17
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int32",
    key.usr: "s:s5Int32V",
    key.offset: 5839,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5847,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5853,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 5858,
    key.length: 16
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5877,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 5882,
    key.length: 21
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5906,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 5913,
    key.length: 15
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5936,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 5940,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int32",
    key.usr: "s:s5Int32V",
    key.offset: 5943,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5954,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5966,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 5971,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 5973,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int32",
    key.usr: "s:s5Int32V",
    key.offset: 5976,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 5985,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.ref.class,
    key.name: "FooClassBase",
    key.usr: "c:objc(cs)FooClassBase",
    key.offset: 5995,
    key.length: 12
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 6015,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 6020,
    key.length: 14
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 6040,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 6047,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.ref.class,
    key.name: "FooClassBase",
    key.usr: "c:objc(cs)FooClassBase",
    key.offset: 6057,
    key.length: 12
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 6077,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 6082,
    key.length: 14
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 6102,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 6112,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 6117,
    key.length: 15
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 6138,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 6145,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.ref.class,
    key.name: "FooClassBase",
    key.usr: "c:objc(cs)FooClassBase",
    key.offset: 6155,
    key.length: 12
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 6175,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 6180,
    key.length: 14
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 6200,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 6207,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 6216,
    key.length: 13
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 6234,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 6240,
    key.length: 21
  },
  {
    key.kind: source.lang.swift.ref.protocol,
    key.name: "_InternalProt",
    key.usr: "c:objc(pl)_InternalProt",
    key.offset: 6264,
    key.length: 13
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 6282,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 6288,
    key.length: 25
  },
  {
    key.kind: source.lang.swift.ref.class,
    key.name: "FooClassBase",
    key.usr: "c:objc(cs)FooClassBase",
    key.offset: 6316,
    key.length: 12
  },
  {
    key.kind: source.lang.swift.syntaxtype.attribute.builtin,
    key.offset: 6336,
    key.length: 15
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 6352,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 6356,
    key.length: 10
  },
  {
    key.kind: source.lang.swift.syntaxtype.typeidentifier,
    key.offset: 6368,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.syntaxtype.attribute.builtin,
    key.offset: 6384,
    key.length: 15
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 6400,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 6404,
    key.length: 16
  },
  {
    key.kind: source.lang.swift.syntaxtype.typeidentifier,
    key.offset: 6422,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 6438,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 6442,
    key.length: 10
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 6454,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 6464,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 6468,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 6479,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 6489,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 6493,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 6503,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.attribute.builtin,
    key.offset: 6513,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 6518,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 6522,
    key.length: 7
  },
  {
    key.kind: source.lang.swift.syntaxtype.typeidentifier,
    key.offset: 6531,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 6547,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 6551,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int32",
    key.usr: "s:s5Int32V",
    key.offset: 6559,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 6570,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 6575,
    key.length: 14
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 6595,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 6605,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 6610,
    key.length: 14
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 6630,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 6640,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 6645,
    key.length: 15
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 6666,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 6676,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 6681,
    key.length: 14
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 6701,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 6708,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 6712,
    key.length: 7
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 6724,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 6730,
    key.length: 21
  },
  {
    key.kind: source.lang.swift.ref.class,
    key.name: "FooClassBase",
    key.usr: "c:objc(cs)FooClassBase",
    key.offset: 6754,
    key.length: 12
  },
  {
    key.kind: source.lang.swift.syntaxtype.attribute.builtin,
    key.offset: 6774,
    key.length: 11
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 6786,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 6792,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 6796,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int32",
    key.usr: "s:s5Int32V",
    key.offset: 6799,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 6811,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 6816,
    key.length: 11
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 6835,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 6840,
    key.length: 16
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 6864,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 6869,
    key.length: 10
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 6887,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 6892,
    key.length: 22
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 6922,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 6927,
    key.length: 22
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 6957,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 6962,
    key.length: 21
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 6991,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 6996,
    key.length: 23
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 7027,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 7032,
    key.length: 25
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 7065,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 7070,
    key.length: 25
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 7103,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 7108,
    key.length: 24
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 7140,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 7145,
    key.length: 26
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 7179,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 7184,
    key.length: 14
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 7204,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 7214,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 7219,
    key.length: 14
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 7239,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 7249,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 7254,
    key.length: 15
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 7275,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 7285,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 7290,
    key.length: 14
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 7310,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 7317,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 7323,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 7337,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 7342,
    key.length: 16
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 7359,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 7361,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.ref.class,
    key.name: "FooCFType",
    key.usr: "c:Foo.h@T@FooCFTypeRef",
    key.offset: 7364,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 7376,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 7381,
    key.length: 21
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 7405,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 7416,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 7421,
    key.length: 13
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 7440,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 7445,
    key.length: 10
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 7461,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 7468,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 7477,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 7479,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.ref.enum,
    key.name: "ABAuthorizationStatus",
    key.usr: "c:@E@ABAuthorizationStatus",
    key.offset: 7484,
    key.length: 21
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 7507,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 7509,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.ref.enum,
    key.name: "ABAuthorizationStatus",
    key.usr: "c:@E@ABAuthorizationStatus",
    key.offset: 7514,
    key.length: 21
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Bool",
    key.usr: "s:Sb",
    key.offset: 7540,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 7547,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 7552,
    key.length: 11
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 7564,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 7566,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int32",
    key.usr: "s:s5Int32V",
    key.offset: 7569,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int32",
    key.usr: "s:s5Int32V",
    key.offset: 7579,
    key.length: 5
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 7585,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 7592,
    key.length: 11
  },
  {
    key.kind: source.lang.swift.ref.protocol,
    key.name: "Equatable",
    key.usr: "s:SQ",
    key.offset: 7606,
    key.length: 9
  },
  {
    key.kind: source.lang.swift.ref.protocol,
    key.name: "RawRepresentable",
    key.usr: "s:SY",
    key.offset: 7617,
    key.length: 16
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 7641,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 7646,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 7648,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "UInt32",
    key.usr: "s:s6UInt32V",
    key.offset: 7658,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 7671,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 7676,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 7685,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "UInt32",
    key.usr: "s:s6UInt32V",
    key.offset: 7695,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 7708,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 7712,
    key.length: 8
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "UInt32",
    key.usr: "s:s6UInt32V",
    key.offset: 7722,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 7734,
    key.length: 6
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 7741,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 7750,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 7752,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "FooSubEnum1",
    key.usr: "c:@E@FooSubEnum1",
    key.offset: 7757,
    key.length: 11
  },
  {
    key.kind: source.lang.swift.syntaxtype.argument,
    key.offset: 7770,
    key.length: 1
  },
  {
    key.kind: source.lang.swift.syntaxtype.parameter,
    key.offset: 7772,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "FooSubEnum1",
    key.usr: "c:@E@FooSubEnum1",
    key.offset: 7777,
    key.length: 11
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Bool",
    key.usr: "s:Sb",
    key.offset: 7793,
    key.length: 4
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 7800,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 7804,
    key.length: 12
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "FooSubEnum1",
    key.usr: "c:@E@FooSubEnum1",
    key.offset: 7818,
    key.length: 11
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 7832,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 7838,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 7842,
    key.length: 12
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "FooSubEnum1",
    key.usr: "c:@E@FooSubEnum1",
    key.offset: 7856,
    key.length: 11
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 7870,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 7876,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.identifier,
    key.offset: 7880,
    key.length: 25
  },
  {
    key.kind: source.lang.swift.ref.struct,
    key.name: "Int",
    key.usr: "s:Si",
    key.offset: 7907,
    key.length: 3
  },
  {
    key.kind: source.lang.swift.syntaxtype.keyword,
    key.offset: 7913,
    key.length: 3
  }
]
[
  {
    key.kind: source.lang.swift.decl.struct,
    key.name: "FooEnum1",
    key.usr: "c:@E@FooEnum1",
    key.doc.full_as_xml: "<Enum file=Foo.h line=\"16\" column=\"6\"><Name>FooEnum1</Name><USR>c:@E@FooEnum1</USR><Declaration>struct FooEnum1 : Equatable, RawRepresentable</Declaration><Abstract><Para> Aaa.  FooEnum1.  Bbb.</Para></Abstract></Enum>",
    key.offset: 36,
    key.length: 205,
    key.fully_annotated_decl: "<decl.struct><syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>FooEnum1</decl.name> : <ref.protocol usr=\"s:SQ\">Equatable</ref.protocol>, <ref.protocol usr=\"s:SY\">RawRepresentable</ref.protocol></decl.struct>",
    key.conforms: [
      {
        key.kind: source.lang.swift.ref.protocol,
        key.name: "Equatable",
        key.usr: "s:SQ"
      },
      {
        key.kind: source.lang.swift.ref.protocol,
        key.name: "RawRepresentable",
        key.usr: "s:SY"
      }
    ],
    key.entities: [
      {
        key.kind: source.lang.swift.decl.function.constructor,
        key.name: "init(_:)",
        key.usr: "s:So8FooEnum1VyABs6UInt32Vcfc",
        key.offset: 89,
        key.length: 24,
        key.fully_annotated_decl: "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>rawValue</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "rawValue",
            key.offset: 106,
            key.length: 6
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.constructor,
        key.name: "init(rawValue:)",
        key.usr: "s:So8FooEnum1V8rawValueABs6UInt32V_tcfc",
        key.offset: 119,
        key.length: 31,
        key.fully_annotated_decl: "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>rawValue</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "rawValue",
            key.name: "rawValue",
            key.offset: 143,
            key.length: 6
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.var.instance,
        key.name: "rawValue",
        key.usr: "s:So8FooEnum1V8rawValues6UInt32Vvp",
        key.offset: 156,
        key.length: 20,
        key.fully_annotated_decl: "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>rawValue</decl.name>: <decl.var.type><ref.struct usr=\"s:s6UInt32V\">UInt32</ref.struct></decl.var.type></decl.var.instance>"
      },
      {
        key.kind: source.lang.swift.decl.function.operator.infix,
        key.name: "!=(_:_:)",
        key.usr: "s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::c:@E@FooEnum1",
        key.original_usr: "s:SQsE2neoiySbx_xtFZ",
        key.doc.full_as_xml: "<Function><Name>!=(_:_:)</Name><USR>s:SQsE2neoiySbx_xtFZ</USR><Declaration>static func != (lhs: Self, rhs: Self) -&gt; Bool</Declaration><CommentParts><Abstract><Para>Returns a Boolean value indicating whether two values are not equal.</Para></Abstract><Parameters><Parameter><Name>lhs</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>A value to compare.</Para></Discussion></Parameter><Parameter><Name>rhs</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Another value to compare.</Para></Discussion></Parameter></Parameters><Discussion><Para>Inequality is the inverse of equality. For any values <codeVoice>a</codeVoice> and <codeVoice>b</codeVoice>, <codeVoice>a != b</codeVoice> implies that <codeVoice>a == b</codeVoice> is <codeVoice>false</codeVoice>.</Para><Para>This is the default implementation of the not-equal-to operator (<codeVoice>!=</codeVoice>) for any type that conforms to <codeVoice>Equatable</codeVoice>.</Para></Discussion></CommentParts></Function>",
        key.offset: 182,
        key.length: 57,
        key.fully_annotated_decl: "<decl.function.operator.infix><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>!= </decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@E@FooEnum1\">FooEnum1</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@E@FooEnum1\">FooEnum1</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype></decl.function.operator.infix>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "lhs",
            key.offset: 205,
            key.length: 8
          },
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "rhs",
            key.offset: 222,
            key.length: 8
          }
        ]
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.var.global,
    key.name: "FooEnum1X",
    key.usr: "c:@E@FooEnum1@FooEnum1X",
    key.doc.full_as_xml: "<Variable file=Foo.h line=\"18\" column=\"3\"><Name>FooEnum1X</Name><USR>c:@E@FooEnum1@FooEnum1X</USR><Declaration>var FooEnum1X: FooEnum1 { get }</Declaration><Abstract><Para> Aaa.  FooEnum1X.  Bbb.</Para></Abstract></Variable>",
    key.offset: 242,
    key.length: 31,
    key.fully_annotated_decl: "<decl.var.global><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>FooEnum1X</decl.name>: <decl.var.type><ref.struct usr=\"c:@E@FooEnum1\">FooEnum1</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.global>"
  },
  {
    key.kind: source.lang.swift.decl.struct,
    key.name: "FooEnum2",
    key.usr: "c:@E@FooEnum2",
    key.offset: 274,
    key.length: 205,
    key.fully_annotated_decl: "<decl.struct><syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>FooEnum2</decl.name> : <ref.protocol usr=\"s:SQ\">Equatable</ref.protocol>, <ref.protocol usr=\"s:SY\">RawRepresentable</ref.protocol></decl.struct>",
    key.conforms: [
      {
        key.kind: source.lang.swift.ref.protocol,
        key.name: "Equatable",
        key.usr: "s:SQ"
      },
      {
        key.kind: source.lang.swift.ref.protocol,
        key.name: "RawRepresentable",
        key.usr: "s:SY"
      }
    ],
    key.entities: [
      {
        key.kind: source.lang.swift.decl.function.constructor,
        key.name: "init(_:)",
        key.usr: "s:So8FooEnum2VyABs6UInt32Vcfc",
        key.offset: 327,
        key.length: 24,
        key.fully_annotated_decl: "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>rawValue</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "rawValue",
            key.offset: 344,
            key.length: 6
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.constructor,
        key.name: "init(rawValue:)",
        key.usr: "s:So8FooEnum2V8rawValueABs6UInt32V_tcfc",
        key.offset: 357,
        key.length: 31,
        key.fully_annotated_decl: "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>rawValue</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "rawValue",
            key.name: "rawValue",
            key.offset: 381,
            key.length: 6
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.var.instance,
        key.name: "rawValue",
        key.usr: "s:So8FooEnum2V8rawValues6UInt32Vvp",
        key.offset: 394,
        key.length: 20,
        key.fully_annotated_decl: "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>rawValue</decl.name>: <decl.var.type><ref.struct usr=\"s:s6UInt32V\">UInt32</ref.struct></decl.var.type></decl.var.instance>"
      },
      {
        key.kind: source.lang.swift.decl.function.operator.infix,
        key.name: "!=(_:_:)",
        key.usr: "s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::c:@E@FooEnum2",
        key.original_usr: "s:SQsE2neoiySbx_xtFZ",
        key.doc.full_as_xml: "<Function><Name>!=(_:_:)</Name><USR>s:SQsE2neoiySbx_xtFZ</USR><Declaration>static func != (lhs: Self, rhs: Self) -&gt; Bool</Declaration><CommentParts><Abstract><Para>Returns a Boolean value indicating whether two values are not equal.</Para></Abstract><Parameters><Parameter><Name>lhs</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>A value to compare.</Para></Discussion></Parameter><Parameter><Name>rhs</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Another value to compare.</Para></Discussion></Parameter></Parameters><Discussion><Para>Inequality is the inverse of equality. For any values <codeVoice>a</codeVoice> and <codeVoice>b</codeVoice>, <codeVoice>a != b</codeVoice> implies that <codeVoice>a == b</codeVoice> is <codeVoice>false</codeVoice>.</Para><Para>This is the default implementation of the not-equal-to operator (<codeVoice>!=</codeVoice>) for any type that conforms to <codeVoice>Equatable</codeVoice>.</Para></Discussion></CommentParts></Function>",
        key.offset: 420,
        key.length: 57,
        key.fully_annotated_decl: "<decl.function.operator.infix><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>!= </decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@E@FooEnum2\">FooEnum2</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@E@FooEnum2\">FooEnum2</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype></decl.function.operator.infix>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "lhs",
            key.offset: 443,
            key.length: 8
          },
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "rhs",
            key.offset: 460,
            key.length: 8
          }
        ]
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.var.global,
    key.name: "FooEnum2X",
    key.usr: "c:@E@FooEnum2@FooEnum2X",
    key.offset: 480,
    key.length: 31,
    key.fully_annotated_decl: "<decl.var.global><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>FooEnum2X</decl.name>: <decl.var.type><ref.struct usr=\"c:@E@FooEnum2\">FooEnum2</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.global>"
  },
  {
    key.kind: source.lang.swift.decl.var.global,
    key.name: "FooEnum2Y",
    key.usr: "c:@E@FooEnum2@FooEnum2Y",
    key.offset: 512,
    key.length: 31,
    key.fully_annotated_decl: "<decl.var.global><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>FooEnum2Y</decl.name>: <decl.var.type><ref.struct usr=\"c:@E@FooEnum2\">FooEnum2</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.global>"
  },
  {
    key.kind: source.lang.swift.decl.struct,
    key.name: "FooEnum3",
    key.usr: "c:@E@FooEnum3",
    key.offset: 544,
    key.length: 205,
    key.fully_annotated_decl: "<decl.struct><syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>FooEnum3</decl.name> : <ref.protocol usr=\"s:SQ\">Equatable</ref.protocol>, <ref.protocol usr=\"s:SY\">RawRepresentable</ref.protocol></decl.struct>",
    key.conforms: [
      {
        key.kind: source.lang.swift.ref.protocol,
        key.name: "Equatable",
        key.usr: "s:SQ"
      },
      {
        key.kind: source.lang.swift.ref.protocol,
        key.name: "RawRepresentable",
        key.usr: "s:SY"
      }
    ],
    key.entities: [
      {
        key.kind: source.lang.swift.decl.function.constructor,
        key.name: "init(_:)",
        key.usr: "s:So8FooEnum3VyABs6UInt32Vcfc",
        key.offset: 597,
        key.length: 24,
        key.fully_annotated_decl: "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>rawValue</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "rawValue",
            key.offset: 614,
            key.length: 6
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.constructor,
        key.name: "init(rawValue:)",
        key.usr: "s:So8FooEnum3V8rawValueABs6UInt32V_tcfc",
        key.offset: 627,
        key.length: 31,
        key.fully_annotated_decl: "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>rawValue</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "rawValue",
            key.name: "rawValue",
            key.offset: 651,
            key.length: 6
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.var.instance,
        key.name: "rawValue",
        key.usr: "s:So8FooEnum3V8rawValues6UInt32Vvp",
        key.offset: 664,
        key.length: 20,
        key.fully_annotated_decl: "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>rawValue</decl.name>: <decl.var.type><ref.struct usr=\"s:s6UInt32V\">UInt32</ref.struct></decl.var.type></decl.var.instance>"
      },
      {
        key.kind: source.lang.swift.decl.function.operator.infix,
        key.name: "!=(_:_:)",
        key.usr: "s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::c:@E@FooEnum3",
        key.original_usr: "s:SQsE2neoiySbx_xtFZ",
        key.doc.full_as_xml: "<Function><Name>!=(_:_:)</Name><USR>s:SQsE2neoiySbx_xtFZ</USR><Declaration>static func != (lhs: Self, rhs: Self) -&gt; Bool</Declaration><CommentParts><Abstract><Para>Returns a Boolean value indicating whether two values are not equal.</Para></Abstract><Parameters><Parameter><Name>lhs</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>A value to compare.</Para></Discussion></Parameter><Parameter><Name>rhs</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Another value to compare.</Para></Discussion></Parameter></Parameters><Discussion><Para>Inequality is the inverse of equality. For any values <codeVoice>a</codeVoice> and <codeVoice>b</codeVoice>, <codeVoice>a != b</codeVoice> implies that <codeVoice>a == b</codeVoice> is <codeVoice>false</codeVoice>.</Para><Para>This is the default implementation of the not-equal-to operator (<codeVoice>!=</codeVoice>) for any type that conforms to <codeVoice>Equatable</codeVoice>.</Para></Discussion></CommentParts></Function>",
        key.offset: 690,
        key.length: 57,
        key.fully_annotated_decl: "<decl.function.operator.infix><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>!= </decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@E@FooEnum3\">FooEnum3</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@E@FooEnum3\">FooEnum3</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype></decl.function.operator.infix>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "lhs",
            key.offset: 713,
            key.length: 8
          },
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "rhs",
            key.offset: 730,
            key.length: 8
          }
        ]
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.var.global,
    key.name: "FooEnum3X",
    key.usr: "c:@E@FooEnum3@FooEnum3X",
    key.offset: 750,
    key.length: 31,
    key.fully_annotated_decl: "<decl.var.global><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>FooEnum3X</decl.name>: <decl.var.type><ref.struct usr=\"c:@E@FooEnum3\">FooEnum3</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.global>"
  },
  {
    key.kind: source.lang.swift.decl.var.global,
    key.name: "FooEnum3Y",
    key.usr: "c:@E@FooEnum3@FooEnum3Y",
    key.offset: 782,
    key.length: 31,
    key.fully_annotated_decl: "<decl.var.global><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>FooEnum3Y</decl.name>: <decl.var.type><ref.struct usr=\"c:@E@FooEnum3\">FooEnum3</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.global>"
  },
  {
    key.kind: source.lang.swift.decl.enum,
    key.name: "FooComparisonResult",
    key.usr: "c:@E@FooComparisonResult",
    key.doc.full_as_xml: "<Enum line=\"1\" column=\"1\"><Name>FooComparisonResult</Name><USR>c:@E@FooComparisonResult</USR><Declaration>enum FooComparisonResult : Int</Declaration><Abstract><Para> Aaa.  FooComparisonResult.  Bbb.</Para></Abstract></Enum>",
    key.offset: 814,
    key.length: 196,
    key.fully_annotated_decl: "<decl.enum><syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>FooComparisonResult</decl.name> : <ref.struct usr=\"s:Si\">Int</ref.struct></decl.enum>",
    key.inherits: [
      {
        key.kind: source.lang.swift.ref.struct,
        key.name: "Int",
        key.usr: "s:Si"
      }
    ],
    key.entities: [
      {
        key.kind: source.lang.swift.decl.enumelement,
        key.name: "orderedAscending",
        key.usr: "c:@E@FooComparisonResult@FooOrderedAscending",
        key.offset: 852,
        key.length: 21,
        key.fully_annotated_decl: "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>orderedAscending</decl.name> = <syntaxtype.number>-1</syntaxtype.number></decl.enumelement>"
      },
      {
        key.kind: source.lang.swift.decl.enumelement,
        key.name: "orderedSame",
        key.usr: "c:@E@FooComparisonResult@FooOrderedSame",
        key.offset: 879,
        key.length: 16,
        key.fully_annotated_decl: "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>orderedSame</decl.name> = <syntaxtype.number>0</syntaxtype.number></decl.enumelement>"
      },
      {
        key.kind: source.lang.swift.decl.enumelement,
        key.name: "orderedDescending",
        key.usr: "c:@E@FooComparisonResult@FooOrderedDescending",
        key.offset: 901,
        key.length: 22,
        key.fully_annotated_decl: "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>orderedDescending</decl.name> = <syntaxtype.number>1</syntaxtype.number></decl.enumelement>"
      },
      {
        key.kind: source.lang.swift.decl.function.operator.infix,
        key.name: "!=(_:_:)",
        key.usr: "s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::c:@E@FooComparisonResult",
        key.original_usr: "s:SQsE2neoiySbx_xtFZ",
        key.doc.full_as_xml: "<Function><Name>!=(_:_:)</Name><USR>s:SQsE2neoiySbx_xtFZ</USR><Declaration>static func != (lhs: Self, rhs: Self) -&gt; Bool</Declaration><CommentParts><Abstract><Para>Returns a Boolean value indicating whether two values are not equal.</Para></Abstract><Parameters><Parameter><Name>lhs</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>A value to compare.</Para></Discussion></Parameter><Parameter><Name>rhs</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Another value to compare.</Para></Discussion></Parameter></Parameters><Discussion><Para>Inequality is the inverse of equality. For any values <codeVoice>a</codeVoice> and <codeVoice>b</codeVoice>, <codeVoice>a != b</codeVoice> implies that <codeVoice>a == b</codeVoice> is <codeVoice>false</codeVoice>.</Para><Para>This is the default implementation of the not-equal-to operator (<codeVoice>!=</codeVoice>) for any type that conforms to <codeVoice>Equatable</codeVoice>.</Para></Discussion></CommentParts></Function>",
        key.offset: 929,
        key.length: 79,
        key.fully_annotated_decl: "<decl.function.operator.infix><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>!= </decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"c:@E@FooComparisonResult\">FooComparisonResult</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"c:@E@FooComparisonResult\">FooComparisonResult</ref.enum></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype></decl.function.operator.infix>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "lhs",
            key.offset: 952,
            key.length: 19
          },
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "rhs",
            key.offset: 980,
            key.length: 19
          }
        ]
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.struct,
    key.name: "FooRuncingOptions",
    key.usr: "c:@E@FooRuncingOptions",
    key.doc.full_as_xml: "<Enum line=\"1\" column=\"1\"><Name>FooRuncingOptions</Name><USR>c:@E@FooRuncingOptions</USR><Declaration>struct FooRuncingOptions : OptionSet</Declaration><Abstract><Para> Aaa.  FooRuncingOptions.  Bbb.</Para></Abstract></Enum>",
    key.offset: 1011,
    key.length: 336,
    key.fully_annotated_decl: "<decl.struct><syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>FooRuncingOptions</decl.name> : <ref.protocol usr=\"s:s9OptionSetP\">OptionSet</ref.protocol></decl.struct>",
    key.conforms: [
      {
        key.kind: source.lang.swift.ref.protocol,
        key.name: "OptionSet",
        key.usr: "s:s9OptionSetP"
      }
    ],
    key.entities: [
      {
        key.kind: source.lang.swift.decl.function.constructor,
        key.name: "init(rawValue:)",
        key.usr: "s:So17FooRuncingOptionsV8rawValueABSi_tcfc",
        key.offset: 1055,
        key.length: 28,
        key.fully_annotated_decl: "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>rawValue</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "rawValue",
            key.name: "rawValue",
            key.offset: 1079,
            key.length: 3
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.var.static,
        key.name: "enableMince",
        key.usr: "c:@E@FooRuncingOptions@FooRuncingEnableMince",
        key.offset: 1089,
        key.length: 49,
        key.fully_annotated_decl: "<decl.var.static><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>enableMince</decl.name>: <decl.var.type><ref.struct usr=\"c:@E@FooRuncingOptions\">FooRuncingOptions</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>"
      },
      {
        key.kind: source.lang.swift.decl.var.static,
        key.name: "enableQuince",
        key.usr: "c:@E@FooRuncingOptions@FooRuncingEnableQuince",
        key.offset: 1144,
        key.length: 50,
        key.fully_annotated_decl: "<decl.var.static><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>enableQuince</decl.name>: <decl.var.type><ref.struct usr=\"c:@E@FooRuncingOptions\">FooRuncingOptions</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>"
      },
      {
        key.kind: source.lang.swift.decl.function.operator.infix,
        key.name: "!=(_:_:)",
        key.usr: "s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::c:@E@FooRuncingOptions",
        key.original_usr: "s:SQsE2neoiySbx_xtFZ",
        key.doc.full_as_xml: "<Function><Name>!=(_:_:)</Name><USR>s:SQsE2neoiySbx_xtFZ</USR><Declaration>static func != (lhs: Self, rhs: Self) -&gt; Bool</Declaration><CommentParts><Abstract><Para>Returns a Boolean value indicating whether two values are not equal.</Para></Abstract><Parameters><Parameter><Name>lhs</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>A value to compare.</Para></Discussion></Parameter><Parameter><Name>rhs</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Another value to compare.</Para></Discussion></Parameter></Parameters><Discussion><Para>Inequality is the inverse of equality. For any values <codeVoice>a</codeVoice> and <codeVoice>b</codeVoice>, <codeVoice>a != b</codeVoice> implies that <codeVoice>a == b</codeVoice> is <codeVoice>false</codeVoice>.</Para><Para>This is the default implementation of the not-equal-to operator (<codeVoice>!=</codeVoice>) for any type that conforms to <codeVoice>Equatable</codeVoice>.</Para></Discussion></CommentParts></Function>",
        key.offset: 1200,
        key.length: 75,
        key.fully_annotated_decl: "<decl.function.operator.infix><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>!= </decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@E@FooRuncingOptions\">FooRuncingOptions</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@E@FooRuncingOptions\">FooRuncingOptions</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype></decl.function.operator.infix>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "lhs",
            key.offset: 1223,
            key.length: 17
          },
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "rhs",
            key.offset: 1249,
            key.length: 17
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.constructor,
        key.name: "init(arrayLiteral:)",
        key.usr: "s:s10SetAlgebraPs7ElementQz012ArrayLiteralC0RtzrlE05arrayE0xAFd_tcfc::SYNTHESIZED::c:@E@FooRuncingOptions",
        key.original_usr: "s:s10SetAlgebraPs7ElementQz012ArrayLiteralC0RtzrlE05arrayE0xAFd_tcfc",
        key.doc.full_as_xml: "<Function><Name>init(arrayLiteral:)</Name><USR>s:s10SetAlgebraPs7ElementQz012ArrayLiteralC0RtzrlE05arrayE0xAFd_tcfc</USR><Declaration>@inlinable init(arrayLiteral: Self.Element...)</Declaration><CommentParts><Abstract><Para>Creates a set containing the elements of the given array literal.</Para></Abstract><Parameters><Parameter><Name>arrayLiteral</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>A list of elements of the new set.</Para></Discussion></Parameter></Parameters><Discussion><Para>Do not call this initializer directly. It is used by the compiler when you use an array literal. Instead, create a new set using an array literal as its value by enclosing a comma-separated list of values in square brackets. You can use an array literal anywhere a set is expected by the type context.</Para><Para>Here, a set of strings is created from an array literal holding only strings:</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let ingredients: Set = [\"cocoa beans\", \"sugar\", \"cocoa butter\", \"salt\"]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[if ingredients.isSuperset(of: [\"sugar\", \"salt\"]) {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"Whatever it is, it's bound to be delicious!\")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"Whatever it is, it's bound to be delicious!\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing></Discussion></CommentParts></Function>",
        key.offset: 1281,
        key.length: 64,
        key.fully_annotated_decl: "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>arrayLiteral</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"c:@E@FooRuncingOptions\">FooRuncingOptions</ref.struct></decl.var.parameter.type>...</decl.var.parameter>)</decl.function.constructor>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "arrayLiteral",
            key.name: "arrayLiteral",
            key.offset: 1324,
            key.length: 17
          }
        ]
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.extension.struct,
    key.doc.full_as_xml: "<Other><Name></Name><Declaration>extension FooRuncingOptions</Declaration><CommentParts><Abstract><Para><codeVoice>SetAlgebra</codeVoice> requirements for which default implementations are supplied.</Para></Abstract><Discussion><Note><Para>A type conforming to <codeVoice>SetAlgebra</codeVoice> can implement any of these initializers or methods, and those implementations will be used in lieu of these defaults.</Para></Note></Discussion></CommentParts></Other>",
    key.offset: 1349,
    key.length: 657,
    key.extends: {
      key.kind: source.lang.swift.ref.struct,
      key.name: "FooRuncingOptions",
      key.usr: "c:@E@FooRuncingOptions"
    },
    key.entities: [
      {
        key.kind: source.lang.swift.decl.function.constructor,
        key.name: "init(_:)",
        key.usr: "s:s10SetAlgebraPsEyxqd__cSTRd__7ElementQyd__ACRtzlufc::SYNTHESIZED::c:@E@FooRuncingOptions",
        key.original_usr: "s:s10SetAlgebraPsEyxqd__cSTRd__7ElementQyd__ACRtzlufc",
        key.generic_params: [
          {
            key.name: "S"
          }
        ],
        key.generic_requirements: [
          {
            key.description: "S : Sequence"
          },
          {
            key.description: "Self.Element == S.Element"
          }
        ],
        key.doc.full_as_xml: "<Function><Name>init(_:)</Name><USR>s:s10SetAlgebraPsEyxqd__cSTRd__7ElementQyd__ACRtzlufc</USR><Declaration>@inlinable init&lt;S&gt;(_ sequence: S) where S : Sequence, Self.Element == S.Element</Declaration><CommentParts><Abstract><Para>Creates a new set from a finite sequence of items.</Para></Abstract><Parameters><Parameter><Name>sequence</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The elements to use as members of the new set.</Para></Discussion></Parameter></Parameters><Discussion><Para>Use this initializer to create a new set from an existing sequence, like an array or a range:</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let validIndices = Set(0..<7).subtracting([2, 4, 5])]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(validIndices)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"[6, 0, 1, 3]\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing></Discussion></CommentParts></Function>",
        key.offset: 1384,
        key.length: 74,
        key.fully_annotated_decl: "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>init</syntaxtype.keyword>&lt;S&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>sequence</decl.var.parameter.name>: <decl.var.parameter.type>S</decl.var.parameter.type></decl.var.parameter>) <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>S : <ref.protocol usr=\"s:ST\">Sequence</ref.protocol></decl.generic_type_requirement>, <decl.generic_type_requirement><ref.typealias usr=\"s:So17FooRuncingOptionsV7Elementa\">Element</ref.typealias> == S.Element</decl.generic_type_requirement></decl.function.constructor>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "sequence",
            key.offset: 1415,
            key.length: 1
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "subtract(_:)",
        key.usr: "s:s10SetAlgebraPsE8subtractyyxF::SYNTHESIZED::c:@E@FooRuncingOptions",
        key.original_usr: "s:s10SetAlgebraPsE8subtractyyxF",
        key.doc.full_as_xml: "<Function><Name>subtract(_:)</Name><USR>s:s10SetAlgebraPsE8subtractyyxF</USR><Declaration>@inlinable mutating func subtract(_ other: Self)</Declaration><CommentParts><Abstract><Para>Removes the elements of the given set from this set.</Para></Abstract><Parameters><Parameter><Name>other</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>A set of the same type as the current set.</Para></Discussion></Parameter></Parameters><Discussion><Para>In the following example, the elements of the <codeVoice>employees</codeVoice> set that are also members of the <codeVoice>neighbors</codeVoice> set are removed. In particular, the names <codeVoice>&quot;Bethany&quot;</codeVoice> and <codeVoice>&quot;Eric&quot;</codeVoice> are removed from <codeVoice>employees</codeVoice>.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var employees: Set = [\"Alicia\", \"Bethany\", \"Chris\", \"Diana\", \"Eric\"]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[let neighbors: Set = [\"Bethany\", \"Eric\", \"Forlani\", \"Greta\"]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[employees.subtract(neighbors)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(employees)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"[\"Diana\", \"Chris\", \"Alicia\"]\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing></Discussion></CommentParts></Function>",
        key.offset: 1464,
        key.length: 61,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>mutating</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>subtract</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>other</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@E@FooRuncingOptions\">FooRuncingOptions</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "other",
            key.offset: 1507,
            key.length: 17
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "isSubset(of:)",
        key.usr: "s:s10SetAlgebraPsE8isSubset2ofSbx_tF::SYNTHESIZED::c:@E@FooRuncingOptions",
        key.original_usr: "s:s10SetAlgebraPsE8isSubset2ofSbx_tF",
        key.doc.full_as_xml: "<Function><Name>isSubset(of:)</Name><USR>s:s10SetAlgebraPsE8isSubset2ofSbx_tF</USR><Declaration>@inlinable func isSubset(of other: Self) -&gt; Bool</Declaration><CommentParts><Abstract><Para>Returns a Boolean value that indicates whether the set is a subset of another set.</Para></Abstract><Parameters><Parameter><Name>other</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>A set of the same type as the current set.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para><codeVoice>true</codeVoice> if the set is a subset of <codeVoice>other</codeVoice>; otherwise, <codeVoice>false</codeVoice>.</Para></ResultDiscussion><Discussion><Para>Set <emphasis>A</emphasis> is a subset of another set <emphasis>B</emphasis> if every member of <emphasis>A</emphasis> is also a member of <emphasis>B</emphasis>.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let employees: Set = [\"Alicia\", \"Bethany\", \"Chris\", \"Diana\", \"Eric\"]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[let attendees: Set = [\"Alicia\", \"Bethany\", \"Diana\"]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(attendees.isSubset(of: employees))]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"true\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing></Discussion></CommentParts></Function>",
        key.offset: 1531,
        key.length: 61,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>isSubset</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>of</decl.var.parameter.argument_label> <decl.var.parameter.name>other</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@E@FooRuncingOptions\">FooRuncingOptions</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype></decl.function.method.instance>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "of",
            key.name: "other",
            key.offset: 1566,
            key.length: 17
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "isSuperset(of:)",
        key.usr: "s:s10SetAlgebraPsE10isSuperset2ofSbx_tF::SYNTHESIZED::c:@E@FooRuncingOptions",
        key.original_usr: "s:s10SetAlgebraPsE10isSuperset2ofSbx_tF",
        key.doc.full_as_xml: "<Function><Name>isSuperset(of:)</Name><USR>s:s10SetAlgebraPsE10isSuperset2ofSbx_tF</USR><Declaration>@inlinable func isSuperset(of other: Self) -&gt; Bool</Declaration><CommentParts><Abstract><Para>Returns a Boolean value that indicates whether the set is a superset of the given set.</Para></Abstract><Parameters><Parameter><Name>other</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>A set of the same type as the current set.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para><codeVoice>true</codeVoice> if the set is a superset of <codeVoice>other</codeVoice>; otherwise, <codeVoice>false</codeVoice>.</Para></ResultDiscussion><Discussion><Para>Set <emphasis>A</emphasis> is a superset of another set <emphasis>B</emphasis> if every member of <emphasis>B</emphasis> is also a member of <emphasis>A</emphasis>.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let employees: Set = [\"Alicia\", \"Bethany\", \"Chris\", \"Diana\", \"Eric\"]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[let attendees: Set = [\"Alicia\", \"Bethany\", \"Diana\"]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(employees.isSuperset(of: attendees))]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"true\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing></Discussion></CommentParts></Function>",
        key.offset: 1598,
        key.length: 63,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>isSuperset</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>of</decl.var.parameter.argument_label> <decl.var.parameter.name>other</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@E@FooRuncingOptions\">FooRuncingOptions</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype></decl.function.method.instance>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "of",
            key.name: "other",
            key.offset: 1635,
            key.length: 17
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "isDisjoint(with:)",
        key.usr: "s:s10SetAlgebraPsE10isDisjoint4withSbx_tF::SYNTHESIZED::c:@E@FooRuncingOptions",
        key.original_usr: "s:s10SetAlgebraPsE10isDisjoint4withSbx_tF",
        key.doc.full_as_xml: "<Function><Name>isDisjoint(with:)</Name><USR>s:s10SetAlgebraPsE10isDisjoint4withSbx_tF</USR><Declaration>@inlinable func isDisjoint(with other: Self) -&gt; Bool</Declaration><CommentParts><Abstract><Para>Returns a Boolean value that indicates whether the set has no members in common with the given set.</Para></Abstract><Parameters><Parameter><Name>other</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>A set of the same type as the current set.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para><codeVoice>true</codeVoice> if the set has no elements in common with <codeVoice>other</codeVoice>; otherwise, <codeVoice>false</codeVoice>.</Para></ResultDiscussion><Discussion><Para>In the following example, the <codeVoice>employees</codeVoice> set is disjoint with the <codeVoice>visitors</codeVoice> set because no name appears in both sets.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let employees: Set = [\"Alicia\", \"Bethany\", \"Chris\", \"Diana\", \"Eric\"]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[let visitors: Set = [\"Marcia\", \"Nathaniel\", \"Olivia\"]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(employees.isDisjoint(with: visitors))]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"true\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing></Discussion></CommentParts></Function>",
        key.offset: 1667,
        key.length: 65,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>isDisjoint</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>with</decl.var.parameter.argument_label> <decl.var.parameter.name>other</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@E@FooRuncingOptions\">FooRuncingOptions</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype></decl.function.method.instance>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "with",
            key.name: "other",
            key.offset: 1706,
            key.length: 17
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "subtracting(_:)",
        key.usr: "s:s10SetAlgebraPsE11subtractingyxxF::SYNTHESIZED::c:@E@FooRuncingOptions",
        key.original_usr: "s:s10SetAlgebraPsE11subtractingyxxF",
        key.doc.full_as_xml: "<Function><Name>subtracting(_:)</Name><USR>s:s10SetAlgebraPsE11subtractingyxxF</USR><Declaration>@inlinable func subtracting(_ other: Self) -&gt; Self</Declaration><CommentParts><Abstract><Para>Returns a new set containing the elements of this set that do not occur in the given set.</Para></Abstract><Parameters><Parameter><Name>other</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>A set of the same type as the current set.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>A new set.</Para></ResultDiscussion><Discussion><Para>In the following example, the <codeVoice>nonNeighbors</codeVoice> set is made up of the elements of the <codeVoice>employees</codeVoice> set that are not elements of <codeVoice>neighbors</codeVoice>:</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let employees: Set = [\"Alicia\", \"Bethany\", \"Chris\", \"Diana\", \"Eric\"]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[let neighbors: Set = [\"Bethany\", \"Eric\", \"Forlani\", \"Greta\"]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[let nonNeighbors = employees.subtract(neighbors)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(nonNeighbors)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"[\"Diana\", \"Chris\", \"Alicia\"]\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing></Discussion></CommentParts></Function>",
        key.offset: 1738,
        key.length: 76,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>subtracting</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>other</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@E@FooRuncingOptions\">FooRuncingOptions</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"c:@E@FooRuncingOptions\">FooRuncingOptions</ref.struct></decl.function.returntype></decl.function.method.instance>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "other",
            key.offset: 1775,
            key.length: 17
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.var.instance,
        key.name: "isEmpty",
        key.usr: "s:s10SetAlgebraPsE7isEmptySbvp::SYNTHESIZED::c:@E@FooRuncingOptions",
        key.original_usr: "s:s10SetAlgebraPsE7isEmptySbvp",
        key.doc.full_as_xml: "<Other><Name>isEmpty</Name><USR>s:s10SetAlgebraPsE7isEmptySbvp</USR><Declaration>@inlinable var isEmpty: Bool { get }</Declaration><CommentParts><Abstract><Para>A Boolean value that indicates whether the set has no elements.</Para></Abstract></CommentParts></Other>",
        key.offset: 1820,
        key.length: 36,
        key.fully_annotated_decl: "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>isEmpty</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>"
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "isStrictSuperset(of:)",
        key.usr: "s:s10SetAlgebraPsE16isStrictSuperset2ofSbx_tF::SYNTHESIZED::c:@E@FooRuncingOptions",
        key.original_usr: "s:s10SetAlgebraPsE16isStrictSuperset2ofSbx_tF",
        key.doc.full_as_xml: "<Function><Name>isStrictSuperset(of:)</Name><USR>s:s10SetAlgebraPsE16isStrictSuperset2ofSbx_tF</USR><Declaration>@inlinable func isStrictSuperset(of other: Self) -&gt; Bool</Declaration><CommentParts><Abstract><Para>Returns a Boolean value that indicates whether this set is a strict superset of the given set.</Para></Abstract><Parameters><Parameter><Name>other</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>A set of the same type as the current set.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para><codeVoice>true</codeVoice> if the set is a strict superset of <codeVoice>other</codeVoice>; otherwise, <codeVoice>false</codeVoice>.</Para></ResultDiscussion><Discussion><Para>Set <emphasis>A</emphasis> is a strict superset of another set <emphasis>B</emphasis> if every member of <emphasis>B</emphasis> is also a member of <emphasis>A</emphasis> and <emphasis>A</emphasis> contains at least one element that is <emphasis>not</emphasis> a member of <emphasis>B</emphasis>.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let employees: Set = [\"Alicia\", \"Bethany\", \"Chris\", \"Diana\", \"Eric\"]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[let attendees: Set = [\"Alicia\", \"Bethany\", \"Diana\"]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(employees.isStrictSuperset(of: attendees))]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"true\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// A set is never a strict superset of itself:]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(employees.isStrictSuperset(of: employees))]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"false\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing></Discussion></CommentParts></Function>",
        key.offset: 1862,
        key.length: 69,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>isStrictSuperset</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>of</decl.var.parameter.argument_label> <decl.var.parameter.name>other</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@E@FooRuncingOptions\">FooRuncingOptions</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype></decl.function.method.instance>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "of",
            key.name: "other",
            key.offset: 1905,
            key.length: 17
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "isStrictSubset(of:)",
        key.usr: "s:s10SetAlgebraPsE14isStrictSubset2ofSbx_tF::SYNTHESIZED::c:@E@FooRuncingOptions",
        key.original_usr: "s:s10SetAlgebraPsE14isStrictSubset2ofSbx_tF",
        key.doc.full_as_xml: "<Function><Name>isStrictSubset(of:)</Name><USR>s:s10SetAlgebraPsE14isStrictSubset2ofSbx_tF</USR><Declaration>@inlinable func isStrictSubset(of other: Self) -&gt; Bool</Declaration><CommentParts><Abstract><Para>Returns a Boolean value that indicates whether this set is a strict subset of the given set.</Para></Abstract><Parameters><Parameter><Name>other</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>A set of the same type as the current set.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para><codeVoice>true</codeVoice> if the set is a strict subset of <codeVoice>other</codeVoice>; otherwise, <codeVoice>false</codeVoice>.</Para></ResultDiscussion><Discussion><Para>Set <emphasis>A</emphasis> is a strict subset of another set <emphasis>B</emphasis> if every member of <emphasis>A</emphasis> is also a member of <emphasis>B</emphasis> and <emphasis>B</emphasis> contains at least one element that is not a member of <emphasis>A</emphasis>.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let employees: Set = [\"Alicia\", \"Bethany\", \"Chris\", \"Diana\", \"Eric\"]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[let attendees: Set = [\"Alicia\", \"Bethany\", \"Diana\"]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(attendees.isStrictSubset(of: employees))]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"true\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// A set is never a strict subset of itself:]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(attendees.isStrictSubset(of: attendees))]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"false\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing></Discussion></CommentParts></Function>",
        key.offset: 1937,
        key.length: 67,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>isStrictSubset</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>of</decl.var.parameter.argument_label> <decl.var.parameter.name>other</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@E@FooRuncingOptions\">FooRuncingOptions</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype></decl.function.method.instance>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "of",
            key.name: "other",
            key.offset: 1978,
            key.length: 17
          }
        ]
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.extension.struct,
    key.doc.full_as_xml: "<Other><Name></Name><Declaration>extension FooRuncingOptions</Declaration><CommentParts><Abstract><Para><codeVoice>OptionSet</codeVoice> requirements for which default implementations are supplied.</Para></Abstract><Discussion><Note><Para>A type conforming to <codeVoice>OptionSet</codeVoice> can implement any of these initializers or methods, and those implementations will be used in lieu of these defaults.</Para></Note></Discussion></CommentParts></Other>",
    key.offset: 2008,
    key.length: 280,
    key.extends: {
      key.kind: source.lang.swift.ref.struct,
      key.name: "FooRuncingOptions",
      key.usr: "c:@E@FooRuncingOptions"
    },
    key.entities: [
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "union(_:)",
        key.usr: "s:s9OptionSetPsE5unionyxxF::SYNTHESIZED::c:@E@FooRuncingOptions",
        key.original_usr: "s:s9OptionSetPsE5unionyxxF",
        key.doc.full_as_xml: "<Function><Name>union(_:)</Name><USR>s:s9OptionSetPsE5unionyxxF</USR><Declaration>@inlinable func union(_ other: Self) -&gt; Self</Declaration><CommentParts><Abstract><Para>Returns a new option set of the elements contained in this set, in the given set, or in both.</Para></Abstract><Parameters><Parameter><Name>other</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>An option set.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>A new option set made up of the elements contained in this set, in <codeVoice>other</codeVoice>, or in both.</Para></ResultDiscussion><Discussion><Para>This example uses the <codeVoice>union(_:)</codeVoice> method to add two more shipping options to the default set.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let defaultShipping = ShippingOptions.standard]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[let memberShipping = defaultShipping.union([.secondDay, .priority])]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(memberShipping.contains(.priority))]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"true\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing></Discussion></CommentParts></Function>",
        key.offset: 2043,
        key.length: 70,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>union</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>other</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@E@FooRuncingOptions\">FooRuncingOptions</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"c:@E@FooRuncingOptions\">FooRuncingOptions</ref.struct></decl.function.returntype></decl.function.method.instance>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "other",
            key.offset: 2074,
            key.length: 17
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "intersection(_:)",
        key.usr: "s:s9OptionSetPsE12intersectionyxxF::SYNTHESIZED::c:@E@FooRuncingOptions",
        key.original_usr: "s:s9OptionSetPsE12intersectionyxxF",
        key.doc.full_as_xml: "<Function><Name>intersection(_:)</Name><USR>s:s9OptionSetPsE12intersectionyxxF</USR><Declaration>@inlinable func intersection(_ other: Self) -&gt; Self</Declaration><CommentParts><Abstract><Para>Returns a new option set with only the elements contained in both this set and the given set.</Para></Abstract><Parameters><Parameter><Name>other</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>An option set.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>A new option set with only the elements contained in both this set and <codeVoice>other</codeVoice>.</Para></ResultDiscussion><Discussion><Para>This example uses the <codeVoice>intersection(_:)</codeVoice> method to limit the available shipping options to what can be used with a PO Box destination.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[// Can only ship standard or priority to PO Boxes]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[let poboxShipping: ShippingOptions = [.standard, .priority]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[let memberShipping: ShippingOptions =]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[        [.standard, .priority, .secondDay]]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[let availableOptions = memberShipping.intersection(poboxShipping)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(availableOptions.contains(.priority))]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"true\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(availableOptions.contains(.secondDay))]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"false\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing></Discussion></CommentParts></Function>",
        key.offset: 2119,
        key.length: 77,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>intersection</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>other</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@E@FooRuncingOptions\">FooRuncingOptions</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"c:@E@FooRuncingOptions\">FooRuncingOptions</ref.struct></decl.function.returntype></decl.function.method.instance>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "other",
            key.offset: 2157,
            key.length: 17
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "symmetricDifference(_:)",
        key.usr: "s:s9OptionSetPsE19symmetricDifferenceyxxF::SYNTHESIZED::c:@E@FooRuncingOptions",
        key.original_usr: "s:s9OptionSetPsE19symmetricDifferenceyxxF",
        key.doc.full_as_xml: "<Function><Name>symmetricDifference(_:)</Name><USR>s:s9OptionSetPsE19symmetricDifferenceyxxF</USR><Declaration>@inlinable func symmetricDifference(_ other: Self) -&gt; Self</Declaration><CommentParts><Abstract><Para>Returns a new option set with the elements contained in this set or in the given set, but not in both.</Para></Abstract><Parameters><Parameter><Name>other</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>An option set.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>A new option set with only the elements contained in either this set or <codeVoice>other</codeVoice>, but not in both.</Para></ResultDiscussion></CommentParts></Function>",
        key.offset: 2202,
        key.length: 84,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>symmetricDifference</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>other</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@E@FooRuncingOptions\">FooRuncingOptions</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"c:@E@FooRuncingOptions\">FooRuncingOptions</ref.struct></decl.function.returntype></decl.function.method.instance>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "other",
            key.offset: 2247,
            key.length: 17
          }
        ]
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.extension.struct,
    key.generic_requirements: [
      {
        key.description: "Self == Self.Element"
      }
    ],
    key.doc.full_as_xml: "<Other><Name></Name><Declaration>extension FooRuncingOptions where Self == Self.Element</Declaration><CommentParts><Abstract><Para><codeVoice>OptionSet</codeVoice> requirements for which default implementations are supplied when <codeVoice>Element == Self</codeVoice>, which is the default.</Para></Abstract><Discussion><Note><Para>A type conforming to <codeVoice>OptionSet</codeVoice> can implement any of these initializers or methods, and those implementations will be used in lieu of these defaults.</Para></Note></Discussion></CommentParts></Other>",
    key.offset: 2290,
    key.length: 407,
    key.extends: {
      key.kind: source.lang.swift.ref.struct,
      key.name: "FooRuncingOptions",
      key.usr: "c:@E@FooRuncingOptions"
    },
    key.entities: [
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "contains(_:)",
        key.usr: "s:s9OptionSetPs7ElementQzRszrlE8containsySbxF::SYNTHESIZED::c:@E@FooRuncingOptions",
        key.original_usr: "s:s9OptionSetPs7ElementQzRszrlE8containsySbxF",
        key.doc.full_as_xml: "<Function><Name>contains(_:)</Name><USR>s:s9OptionSetPs7ElementQzRszrlE8containsySbxF</USR><Declaration>@inlinable func contains(_ member: Self) -&gt; Bool</Declaration><CommentParts><Abstract><Para>Returns a Boolean value that indicates whether a given element is a member of the option set.</Para></Abstract><Parameters><Parameter><Name>member</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The element to look for in the option set.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para><codeVoice>true</codeVoice> if the option set contains <codeVoice>member</codeVoice>; otherwise, <codeVoice>false</codeVoice>.</Para></ResultDiscussion><Discussion><Para>This example uses the <codeVoice>contains(_:)</codeVoice> method to check whether next-day shipping is in the <codeVoice>availableOptions</codeVoice> instance.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let availableOptions = ShippingOptions.express]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[if availableOptions.contains(.nextDay) {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"Next day shipping available\")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"Next day shipping available\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing></Discussion></CommentParts></Function>",
        key.offset: 2325,
        key.length: 61,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>contains</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>member</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@E@FooRuncingOptions\">FooRuncingOptions</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype></decl.function.method.instance>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "member",
            key.offset: 2360,
            key.length: 17
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "insert(_:)",
        key.usr: "s:s9OptionSetPs7ElementQzRszrlE6insertySb8inserted_x17memberAfterInserttxF::SYNTHESIZED::c:@E@FooRuncingOptions",
        key.original_usr: "s:s9OptionSetPs7ElementQzRszrlE6insertySb8inserted_x17memberAfterInserttxF",
        key.doc.full_as_xml: "<Function><Name>insert(_:)</Name><USR>s:s9OptionSetPs7ElementQzRszrlE6insertySb8inserted_x17memberAfterInserttxF</USR><Declaration>@inlinable mutating func insert(_ newMember: Self.Element) -&gt; (inserted: Bool, memberAfterInsert: Self.Element)</Declaration><CommentParts><Abstract><Para>Adds the given element to the option set if it is not already a member.</Para></Abstract><Parameters><Parameter><Name>newMember</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The element to insert.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para><codeVoice>(true, newMember)</codeVoice> if <codeVoice>newMember</codeVoice> was not contained in <codeVoice>self</codeVoice>. Otherwise, returns <codeVoice>(false, oldMember)</codeVoice>, where <codeVoice>oldMember</codeVoice> is the member of the set equal to <codeVoice>newMember</codeVoice>.</Para></ResultDiscussion><Discussion><Para>In the following example, the <codeVoice>.secondDay</codeVoice> shipping option is added to the <codeVoice>freeOptions</codeVoice> option set if <codeVoice>purchasePrice</codeVoice> is greater than 50.0. For the <codeVoice>ShippingOptions</codeVoice> declaration, see the <codeVoice>OptionSet</codeVoice> protocol discussion.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let purchasePrice = 87.55]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[var freeOptions: ShippingOptions = [.standard, .priority]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[if purchasePrice > 50 {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    freeOptions.insert(.secondDay)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(freeOptions.contains(.secondDay))]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"true\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing></Discussion></CommentParts></Function>",
        key.offset: 2392,
        key.length: 121,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>mutating</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>insert</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>newMember</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@E@FooRuncingOptions\">FooRuncingOptions</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><tuple>(<tuple.element><tuple.element.argument_label>inserted</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>memberAfterInsert</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"c:@E@FooRuncingOptions\">FooRuncingOptions</ref.struct></tuple.element.type></tuple.element>)</tuple></decl.function.returntype></decl.function.method.instance>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "newMember",
            key.offset: 2437,
            key.length: 17
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "remove(_:)",
        key.usr: "s:s9OptionSetPs7ElementQzRszrlE6removeyxSgxF::SYNTHESIZED::c:@E@FooRuncingOptions",
        key.original_usr: "s:s9OptionSetPs7ElementQzRszrlE6removeyxSgxF",
        key.doc.full_as_xml: "<Function><Name>remove(_:)</Name><USR>s:s9OptionSetPs7ElementQzRszrlE6removeyxSgxF</USR><Declaration>@inlinable mutating func remove(_ member: Self.Element) -&gt; Self.Element?</Declaration><CommentParts><Abstract><Para>Removes the given element and all elements subsumed by it.</Para></Abstract><Parameters><Parameter><Name>member</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The element of the set to remove.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>The intersection of <codeVoice>[member]</codeVoice> and the set, if the intersection was nonempty; otherwise, <codeVoice>nil</codeVoice>.</Para></ResultDiscussion><Discussion><Para>In the following example, the <codeVoice>.priority</codeVoice> shipping option is removed from the <codeVoice>options</codeVoice> option set. Attempting to remove the same shipping option a second time results in <codeVoice>nil</codeVoice>, because <codeVoice>options</codeVoice> no longer contains <codeVoice>.priority</codeVoice> as a member.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var options: ShippingOptions = [.secondDay, .priority]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[let priorityOption = options.remove(.priority)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(priorityOption == .priority)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"true\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(options.remove(.priority))]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"nil\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>In the next example, the <codeVoice>.express</codeVoice> element is passed to <codeVoice>remove(_:)</codeVoice>. Although <codeVoice>.express</codeVoice> is not a member of <codeVoice>options</codeVoice>, <codeVoice>.express</codeVoice> subsumes the remaining <codeVoice>.secondDay</codeVoice> element of the option set. Therefore, <codeVoice>options</codeVoice> is emptied and the intersection between <codeVoice>.express</codeVoice> and <codeVoice>options</codeVoice> is returned.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let expressOption = options.remove(.express)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(expressOption == .express)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"false\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(expressOption == .secondDay)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"true\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing></Discussion></CommentParts></Function>",
        key.offset: 2519,
        key.length: 82,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>mutating</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>remove</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>member</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@E@FooRuncingOptions\">FooRuncingOptions</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"c:@E@FooRuncingOptions\">FooRuncingOptions</ref.struct>?</decl.function.returntype></decl.function.method.instance>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "member",
            key.offset: 2561,
            key.length: 17
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "update(with:)",
        key.usr: "s:s9OptionSetPs7ElementQzRszrlE6update4withxSgx_tF::SYNTHESIZED::c:@E@FooRuncingOptions",
        key.original_usr: "s:s9OptionSetPs7ElementQzRszrlE6update4withxSgx_tF",
        key.doc.full_as_xml: "<Function><Name>update(with:)</Name><USR>s:s9OptionSetPs7ElementQzRszrlE6update4withxSgx_tF</USR><Declaration>@inlinable mutating func update(with newMember: Self.Element) -&gt; Self.Element?</Declaration><CommentParts><Abstract><Para>Inserts the given element into the set.</Para></Abstract><ResultDiscussion><Para>The intersection of <codeVoice>[newMember]</codeVoice> and the set if the intersection was nonempty; otherwise, <codeVoice>nil</codeVoice>.</Para></ResultDiscussion><Discussion><Para>If <codeVoice>newMember</codeVoice> is not contained in the set but subsumes current members of the set, the subsumed members are returned.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var options: ShippingOptions = [.secondDay, .priority]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[let replaced = options.update(with: .express)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(replaced == .secondDay)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"true\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing></Discussion></CommentParts></Function>",
        key.offset: 2607,
        key.length: 88,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>mutating</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>update</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>with</decl.var.parameter.argument_label> <decl.var.parameter.name>newMember</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@E@FooRuncingOptions\">FooRuncingOptions</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"c:@E@FooRuncingOptions\">FooRuncingOptions</ref.struct>?</decl.function.returntype></decl.function.method.instance>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "with",
            key.name: "newMember",
            key.offset: 2655,
            key.length: 17
          }
        ]
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.extension.struct,
    key.generic_requirements: [
      {
        key.description: "Self.RawValue : FixedWidthInteger"
      }
    ],
    key.doc.full_as_xml: "<Other><Name></Name><Declaration>extension FooRuncingOptions where Self.RawValue : FixedWidthInteger</Declaration><CommentParts><Abstract><Para><codeVoice>OptionSet</codeVoice> requirements for which default implementations are supplied when <codeVoice>RawValue</codeVoice> conforms to <codeVoice>FixedWidthInteger</codeVoice>, which is the usual case.  Each distinct bit of an option set’s <codeVoice>.rawValue</codeVoice> corresponds to a disjoint value of the <codeVoice>OptionSet</codeVoice>.</Para></Abstract><Discussion><Note><Para>A type conforming to <codeVoice>OptionSet</codeVoice> can implement any of these initializers or methods, and those implementations will be used in lieu of these defaults.</Para></Note><List-Bullet><Item><Para><codeVoice>union</codeVoice> is implemented as a bitwise “or” (<codeVoice>|</codeVoice>) of <codeVoice>rawValue</codeVoice>s</Para></Item><Item><Para><codeVoice>intersection</codeVoice> is implemented as a bitwise “and” (<codeVoice>&amp;</codeVoice>) of <codeVoice>rawValue</codeVoice>s</Para></Item><Item><Para><codeVoice>symmetricDifference</codeVoice> is implemented as a bitwise “exclusive or” (<codeVoice>^</codeVoice>) of <codeVoice>rawValue</codeVoice>s</Para></Item></List-Bullet></Discussion></CommentParts></Other>",
    key.offset: 2699,
    key.length: 279,
    key.extends: {
      key.kind: source.lang.swift.ref.struct,
      key.name: "FooRuncingOptions",
      key.usr: "c:@E@FooRuncingOptions"
    },
    key.entities: [
      {
        key.kind: source.lang.swift.decl.function.constructor,
        key.name: "init()",
        key.usr: "s:s9OptionSetPss17FixedWidthInteger8RawValueRpzrlExycfc::SYNTHESIZED::c:@E@FooRuncingOptions",
        key.original_usr: "s:s9OptionSetPss17FixedWidthInteger8RawValueRpzrlExycfc",
        key.doc.full_as_xml: "<Function><Name>init()</Name><USR>s:s9OptionSetPss17FixedWidthInteger8RawValueRpzrlExycfc</USR><Declaration>@inlinable init()</Declaration><CommentParts><Abstract><Para>Creates an empty option set.</Para></Abstract><Discussion><Para>This initializer creates an option set with a raw value of zero.</Para></Discussion></CommentParts></Function>",
        key.offset: 2734,
        key.length: 17,
        key.fully_annotated_decl: "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>init</syntaxtype.keyword>()</decl.function.constructor>"
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "formUnion(_:)",
        key.usr: "s:s9OptionSetPss17FixedWidthInteger8RawValueRpzrlE9formUnionyyxF::SYNTHESIZED::c:@E@FooRuncingOptions",
        key.original_usr: "s:s9OptionSetPss17FixedWidthInteger8RawValueRpzrlE9formUnionyyxF",
        key.doc.full_as_xml: "<Function><Name>formUnion(_:)</Name><USR>s:s9OptionSetPss17FixedWidthInteger8RawValueRpzrlE9formUnionyyxF</USR><Declaration>@inlinable mutating func formUnion(_ other: Self)</Declaration><CommentParts><Abstract><Para>Inserts the elements of another set into this option set.</Para></Abstract><Parameters><Parameter><Name>other</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>An option set.</Para></Discussion></Parameter></Parameters><Discussion><Para>This method is implemented as a <codeVoice>|</codeVoice> (bitwise OR) operation on the two sets’ raw values.</Para></Discussion></CommentParts></Function>",
        key.offset: 2757,
        key.length: 62,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>mutating</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>formUnion</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>other</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@E@FooRuncingOptions\">FooRuncingOptions</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "other",
            key.offset: 2801,
            key.length: 17
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "formIntersection(_:)",
        key.usr: "s:s9OptionSetPss17FixedWidthInteger8RawValueRpzrlE16formIntersectionyyxF::SYNTHESIZED::c:@E@FooRuncingOptions",
        key.original_usr: "s:s9OptionSetPss17FixedWidthInteger8RawValueRpzrlE16formIntersectionyyxF",
        key.doc.full_as_xml: "<Function><Name>formIntersection(_:)</Name><USR>s:s9OptionSetPss17FixedWidthInteger8RawValueRpzrlE16formIntersectionyyxF</USR><Declaration>@inlinable mutating func formIntersection(_ other: Self)</Declaration><CommentParts><Abstract><Para>Removes all elements of this option set that are not also present in the given set.</Para></Abstract><Parameters><Parameter><Name>other</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>An option set.</Para></Discussion></Parameter></Parameters><Discussion><Para>This method is implemented as a <codeVoice>&amp;</codeVoice> (bitwise AND) operation on the two sets’ raw values.</Para></Discussion></CommentParts></Function>",
        key.offset: 2825,
        key.length: 69,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>mutating</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>formIntersection</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>other</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@E@FooRuncingOptions\">FooRuncingOptions</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "other",
            key.offset: 2876,
            key.length: 17
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "formSymmetricDifference(_:)",
        key.usr: "s:s9OptionSetPss17FixedWidthInteger8RawValueRpzrlE23formSymmetricDifferenceyyxF::SYNTHESIZED::c:@E@FooRuncingOptions",
        key.original_usr: "s:s9OptionSetPss17FixedWidthInteger8RawValueRpzrlE23formSymmetricDifferenceyyxF",
        key.doc.full_as_xml: "<Function><Name>formSymmetricDifference(_:)</Name><USR>s:s9OptionSetPss17FixedWidthInteger8RawValueRpzrlE23formSymmetricDifferenceyyxF</USR><Declaration>@inlinable mutating func formSymmetricDifference(_ other: Self)</Declaration><CommentParts><Abstract><Para>Replaces this set with a new set containing all elements contained in either this set or the given set, but not in both.</Para></Abstract><Parameters><Parameter><Name>other</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>An option set.</Para></Discussion></Parameter></Parameters><Discussion><Para>This method is implemented as a <codeVoice>^</codeVoice> (bitwise XOR) operation on the two sets’ raw values.</Para></Discussion></CommentParts></Function>",
        key.offset: 2900,
        key.length: 76,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@inlinable</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>mutating</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>formSymmetricDifference</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>other</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@E@FooRuncingOptions\">FooRuncingOptions</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "other",
            key.offset: 2958,
            key.length: 17
          }
        ]
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.struct,
    key.name: "FooStruct1",
    key.usr: "c:@S@FooStruct1",
    key.offset: 2979,
    key.length: 105,
    key.fully_annotated_decl: "<decl.struct><syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>FooStruct1</decl.name></decl.struct>",
    key.entities: [
      {
        key.kind: source.lang.swift.decl.var.instance,
        key.name: "x",
        key.usr: "c:@S@FooStruct1@FI@x",
        key.offset: 3004,
        key.length: 12,
        key.fully_annotated_decl: "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>x</decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.type></decl.var.instance>"
      },
      {
        key.kind: source.lang.swift.decl.var.instance,
        key.name: "y",
        key.usr: "c:@S@FooStruct1@FI@y",
        key.offset: 3022,
        key.length: 13,
        key.fully_annotated_decl: "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>y</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>"
      },
      {
        key.kind: source.lang.swift.decl.function.constructor,
        key.name: "init()",
        key.usr: "s:So10FooStruct1VABycfc",
        key.offset: 3041,
        key.length: 6,
        key.fully_annotated_decl: "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>()</decl.function.constructor>"
      },
      {
        key.kind: source.lang.swift.decl.function.constructor,
        key.name: "init(x:y:)",
        key.usr: "s:So10FooStruct1V1x1yABs5Int32V_Sdtcfc",
        key.offset: 3053,
        key.length: 29,
        key.fully_annotated_decl: "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>x</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>y</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "x",
            key.name: "x",
            key.offset: 3063,
            key.length: 5
          },
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "y",
            key.name: "y",
            key.offset: 3075,
            key.length: 6
          }
        ]
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.typealias,
    key.name: "FooStruct1Pointer",
    key.usr: "c:Foo.h@T@FooStruct1Pointer",
    key.offset: 3085,
    key.length: 62,
    key.fully_annotated_decl: "<decl.typealias><syntaxtype.keyword>typealias</syntaxtype.keyword> <decl.name>FooStruct1Pointer</decl.name> = <ref.struct usr=\"s:Sp\">UnsafeMutablePointer</ref.struct>&lt;<ref.struct usr=\"c:@S@FooStruct1\">FooStruct1</ref.struct>&gt;</decl.typealias>",
    key.conforms: [
      {
        key.kind: source.lang.swift.ref.protocol,
        key.name: "_Pointer",
        key.usr: "s:s8_PointerP"
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.struct,
    key.name: "FooStruct2",
    key.usr: "c:@S@FooStruct2",
    key.offset: 3148,
    key.length: 105,
    key.fully_annotated_decl: "<decl.struct><syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>FooStruct2</decl.name></decl.struct>",
    key.entities: [
      {
        key.kind: source.lang.swift.decl.var.instance,
        key.name: "x",
        key.usr: "c:@S@FooStruct2@FI@x",
        key.offset: 3173,
        key.length: 12,
        key.fully_annotated_decl: "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>x</decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.type></decl.var.instance>"
      },
      {
        key.kind: source.lang.swift.decl.var.instance,
        key.name: "y",
        key.usr: "c:@S@FooStruct2@FI@y",
        key.offset: 3191,
        key.length: 13,
        key.fully_annotated_decl: "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>y</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>"
      },
      {
        key.kind: source.lang.swift.decl.function.constructor,
        key.name: "init()",
        key.usr: "s:So10FooStruct2VABycfc",
        key.offset: 3210,
        key.length: 6,
        key.fully_annotated_decl: "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>()</decl.function.constructor>"
      },
      {
        key.kind: source.lang.swift.decl.function.constructor,
        key.name: "init(x:y:)",
        key.usr: "s:So10FooStruct2V1x1yABs5Int32V_Sdtcfc",
        key.offset: 3222,
        key.length: 29,
        key.fully_annotated_decl: "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>x</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>y</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "x",
            key.name: "x",
            key.offset: 3232,
            key.length: 5
          },
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "y",
            key.name: "y",
            key.offset: 3244,
            key.length: 6
          }
        ]
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.typealias,
    key.name: "FooStructTypedef1",
    key.usr: "c:Foo.h@T@FooStructTypedef1",
    key.offset: 3254,
    key.length: 40,
    key.fully_annotated_decl: "<decl.typealias><syntaxtype.keyword>typealias</syntaxtype.keyword> <decl.name>FooStructTypedef1</decl.name> = <ref.struct usr=\"c:@S@FooStruct2\">FooStruct2</ref.struct></decl.typealias>"
  },
  {
    key.kind: source.lang.swift.decl.struct,
    key.name: "FooStructTypedef2",
    key.usr: "c:@SA@FooStructTypedef2",
    key.offset: 3295,
    key.length: 112,
    key.fully_annotated_decl: "<decl.struct><syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>FooStructTypedef2</decl.name></decl.struct>",
    key.entities: [
      {
        key.kind: source.lang.swift.decl.var.instance,
        key.name: "x",
        key.usr: "c:@SA@FooStructTypedef2@FI@x",
        key.offset: 3327,
        key.length: 12,
        key.fully_annotated_decl: "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>x</decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.type></decl.var.instance>"
      },
      {
        key.kind: source.lang.swift.decl.var.instance,
        key.name: "y",
        key.usr: "c:@SA@FooStructTypedef2@FI@y",
        key.offset: 3345,
        key.length: 13,
        key.fully_annotated_decl: "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>y</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>"
      },
      {
        key.kind: source.lang.swift.decl.function.constructor,
        key.name: "init()",
        key.usr: "s:So17FooStructTypedef2aABycfc",
        key.offset: 3364,
        key.length: 6,
        key.fully_annotated_decl: "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>()</decl.function.constructor>"
      },
      {
        key.kind: source.lang.swift.decl.function.constructor,
        key.name: "init(x:y:)",
        key.usr: "s:So17FooStructTypedef2a1x1yABs5Int32V_Sdtcfc",
        key.offset: 3376,
        key.length: 29,
        key.fully_annotated_decl: "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>x</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>y</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "x",
            key.name: "x",
            key.offset: 3386,
            key.length: 5
          },
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "y",
            key.name: "y",
            key.offset: 3398,
            key.length: 6
          }
        ]
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.typealias,
    key.name: "FooTypedef1",
    key.usr: "c:Foo.h@T@FooTypedef1",
    key.doc.full_as_xml: "<Typedef file=Foo.h line=\"60\" column=\"13\"><Name>FooTypedef1</Name><USR>c:Foo.h@T@FooTypedef1</USR><Declaration>typealias FooTypedef1 = Int32</Declaration><Abstract><Para> Aaa.  FooTypedef1.  Bbb.</Para></Abstract></Typedef>",
    key.offset: 3408,
    key.length: 29,
    key.fully_annotated_decl: "<decl.typealias><syntaxtype.keyword>typealias</syntaxtype.keyword> <decl.name>FooTypedef1</decl.name> = <ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.typealias>",
    key.conforms: [
      {
        key.kind: source.lang.swift.ref.protocol,
        key.name: "FixedWidthInteger",
        key.usr: "s:s17FixedWidthIntegerP"
      },
      {
        key.kind: source.lang.swift.ref.protocol,
        key.name: "SignedInteger",
        key.usr: "s:SZ"
      },
      {
        key.kind: source.lang.swift.ref.protocol,
        key.name: "_ExpressibleByBuiltinIntegerLiteral",
        key.usr: "s:s35_ExpressibleByBuiltinIntegerLiteralP"
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.var.global,
    key.name: "fooIntVar",
    key.usr: "c:@fooIntVar",
    key.doc.full_as_xml: "<Variable file=Foo.h line=\"63\" column=\"12\"><Name>fooIntVar</Name><USR>c:@fooIntVar</USR><Declaration>var fooIntVar: Int32</Declaration><Abstract><Para> Aaa.  fooIntVar.  Bbb.</Para></Abstract></Variable>",
    key.offset: 3438,
    key.length: 20,
    key.fully_annotated_decl: "<decl.var.global><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>fooIntVar</decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.type></decl.var.global>"
  },
  {
    key.kind: source.lang.swift.decl.function.free,
    key.name: "fooFunc1(_:)",
    key.usr: "c:@F@fooFunc1",
    key.doc.full_as_xml: "<Function file=Foo.h line=\"66\" column=\"5\"><Name>fooFunc1</Name><USR>c:@F@fooFunc1</USR><Declaration>func fooFunc1(_ a: Int32) -&gt; Int32</Declaration><Abstract><Para> Aaa.  fooFunc1.  Bbb.</Para></Abstract></Function>",
    key.offset: 3459,
    key.length: 34,
    key.fully_annotated_decl: "<decl.function.free><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fooFunc1</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>a</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.function.returntype></decl.function.free>",
    key.entities: [
      {
        key.kind: source.lang.swift.decl.var.local,
        key.keyword: "_",
        key.name: "a",
        key.offset: 3478,
        key.length: 5
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.function.free,
    key.name: "fooFunc1AnonymousParam(_:)",
    key.usr: "c:@F@fooFunc1AnonymousParam",
    key.offset: 3494,
    key.length: 48,
    key.fully_annotated_decl: "<decl.function.free><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fooFunc1AnonymousParam</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.function.returntype></decl.function.free>",
    key.entities: [
      {
        key.kind: source.lang.swift.decl.var.local,
        key.keyword: "_",
        key.offset: 3527,
        key.length: 5
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.function.free,
    key.name: "fooFunc3(_:_:_:_:)",
    key.usr: "c:@F@fooFunc3",
    key.offset: 3543,
    key.length: 94,
    key.fully_annotated_decl: "<decl.function.free><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fooFunc3</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>a</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>b</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>c</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>d</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer</ref.struct>&lt;<ref.struct usr=\"s:s5Int32V\">Int32</ref.struct>&gt;!</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.function.returntype></decl.function.free>",
    key.entities: [
      {
        key.kind: source.lang.swift.decl.var.local,
        key.keyword: "_",
        key.name: "a",
        key.offset: 3562,
        key.length: 5
      },
      {
        key.kind: source.lang.swift.decl.var.local,
        key.keyword: "_",
        key.name: "b",
        key.offset: 3574,
        key.length: 5
      },
      {
        key.kind: source.lang.swift.decl.var.local,
        key.keyword: "_",
        key.name: "c",
        key.offset: 3586,
        key.length: 6
      },
      {
        key.kind: source.lang.swift.decl.var.local,
        key.keyword: "_",
        key.name: "d",
        key.offset: 3599,
        key.length: 28
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.function.free,
    key.name: "fooFuncWithBlock(_:)",
    key.usr: "c:@F@fooFuncWithBlock",
    key.offset: 3638,
    key.length: 49,
    key.fully_annotated_decl: "<decl.function.free><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fooFuncWithBlock</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>blk</decl.var.parameter.name>: <decl.var.parameter.type>((<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.function.returntype>)!</decl.var.parameter.type></decl.var.parameter>)</decl.function.free>",
    key.entities: [
      {
        key.kind: source.lang.swift.decl.var.local,
        key.keyword: "_",
        key.name: "blk",
        key.offset: 3667,
        key.length: 19
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.function.free,
    key.name: "fooFuncWithFunctionPointer(_:)",
    key.usr: "c:@F@fooFuncWithFunctionPointer",
    key.offset: 3688,
    key.length: 60,
    key.fully_annotated_decl: "<decl.function.free><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fooFuncWithFunctionPointer</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>fptr</decl.var.parameter.name>: <decl.var.parameter.type>((<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.function.returntype>)!</decl.var.parameter.type></decl.var.parameter>)</decl.function.free>",
    key.entities: [
      {
        key.kind: source.lang.swift.decl.var.local,
        key.keyword: "_",
        key.name: "fptr",
        key.offset: 3728,
        key.length: 19
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.function.free,
    key.name: "fooFuncNoreturn1()",
    key.usr: "c:@F@fooFuncNoreturn1",
    key.offset: 3749,
    key.length: 32,
    key.fully_annotated_decl: "<decl.function.free><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fooFuncNoreturn1</decl.name>() -&gt; <decl.function.returntype><ref.enum usr=\"s:s5NeverO\">Never</ref.enum></decl.function.returntype></decl.function.free>"
  },
  {
    key.kind: source.lang.swift.decl.function.free,
    key.name: "fooFuncNoreturn2()",
    key.usr: "c:@F@fooFuncNoreturn2",
    key.offset: 3782,
    key.length: 32,
    key.fully_annotated_decl: "<decl.function.free><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fooFuncNoreturn2</decl.name>() -&gt; <decl.function.returntype><ref.enum usr=\"s:s5NeverO\">Never</ref.enum></decl.function.returntype></decl.function.free>"
  },
  {
    key.kind: source.lang.swift.decl.function.free,
    key.name: "fooFuncWithComment1()",
    key.usr: "c:@F@fooFuncWithComment1",
    key.doc.full_as_xml: "<Function file=Foo.h line=\"89\" column=\"6\"><Name>fooFuncWithComment1</Name><USR>c:@F@fooFuncWithComment1</USR><Declaration>func fooFuncWithComment1()</Declaration><Abstract><Para> Aaa.  fooFuncWithComment1.  Bbb. Ccc.</Para></Abstract><Discussion><Para> Ddd.</Para></Discussion></Function>",
    key.offset: 3815,
    key.length: 26,
    key.fully_annotated_decl: "<decl.function.free><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fooFuncWithComment1</decl.name>()</decl.function.free>"
  },
  {
    key.kind: source.lang.swift.decl.function.free,
    key.name: "fooFuncWithComment2()",
    key.usr: "c:@F@fooFuncWithComment2",
    key.doc.full_as_xml: "<Function file=Foo.h line=\"94\" column=\"6\"><Name>fooFuncWithComment2</Name><USR>c:@F@fooFuncWithComment2</USR><Declaration>func fooFuncWithComment2()</Declaration><Abstract><Para>  Aaa.  fooFuncWithComment2.  Bbb.</Para></Abstract></Function>",
    key.offset: 3842,
    key.length: 26,
    key.fully_annotated_decl: "<decl.function.free><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fooFuncWithComment2</decl.name>()</decl.function.free>"
  },
  {
    key.kind: source.lang.swift.decl.function.free,
    key.name: "fooFuncWithComment3()",
    key.usr: "c:@F@fooFuncWithComment3",
    key.doc.full_as_xml: "<Function file=Foo.h line=\"102\" column=\"6\"><Name>fooFuncWithComment3</Name><USR>c:@F@fooFuncWithComment3</USR><Declaration>func fooFuncWithComment3()</Declaration><Abstract><Para> Aaa.  fooFuncWithComment3.  Bbb.</Para></Abstract><Discussion><Para> Ccc.</Para></Discussion></Function>",
    key.offset: 3869,
    key.length: 26,
    key.fully_annotated_decl: "<decl.function.free><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fooFuncWithComment3</decl.name>()</decl.function.free>"
  },
  {
    key.kind: source.lang.swift.decl.function.free,
    key.name: "fooFuncWithComment4()",
    key.usr: "c:@F@fooFuncWithComment4",
    key.doc.full_as_xml: "<Function file=Foo.h line=\"108\" column=\"6\"><Name>fooFuncWithComment4</Name><USR>c:@F@fooFuncWithComment4</USR><Declaration>func fooFuncWithComment4()</Declaration><Abstract><Para> Aaa.  fooFuncWithComment4.  Bbb.</Para></Abstract><Discussion><Para> Ddd.</Para></Discussion></Function>",
    key.offset: 3896,
    key.length: 26,
    key.fully_annotated_decl: "<decl.function.free><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fooFuncWithComment4</decl.name>()</decl.function.free>"
  },
  {
    key.kind: source.lang.swift.decl.function.free,
    key.name: "fooFuncWithComment5()",
    key.usr: "c:@F@fooFuncWithComment5",
    key.doc.full_as_xml: "<Function file=Foo.h line=\"114\" column=\"6\"><Name>fooFuncWithComment5</Name><USR>c:@F@fooFuncWithComment5</USR><Declaration>func fooFuncWithComment5()</Declaration><Abstract><Para> Aaa.  fooFuncWithComment5.  Bbb. Ccc.</Para></Abstract><Discussion><Para> Ddd.</Para></Discussion></Function>",
    key.offset: 3923,
    key.length: 26,
    key.fully_annotated_decl: "<decl.function.free><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fooFuncWithComment5</decl.name>()</decl.function.free>"
  },
  {
    key.kind: source.lang.swift.decl.function.free,
    key.name: "redeclaredInMultipleModulesFunc1(_:)",
    key.usr: "c:@F@redeclaredInMultipleModulesFunc1",
    key.doc.full_as_xml: "<Function file=Foo.h line=\"118\" column=\"5\"><Name>redeclaredInMultipleModulesFunc1</Name><USR>c:@F@redeclaredInMultipleModulesFunc1</USR><Declaration>func redeclaredInMultipleModulesFunc1(_ a: Int32) -&gt; Int32</Declaration><Abstract><Para> Aaa.  redeclaredInMultipleModulesFunc1.  Bbb.</Para></Abstract></Function>",
    key.offset: 3950,
    key.length: 58,
    key.fully_annotated_decl: "<decl.function.free><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>redeclaredInMultipleModulesFunc1</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>a</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.function.returntype></decl.function.free>",
    key.entities: [
      {
        key.kind: source.lang.swift.decl.var.local,
        key.keyword: "_",
        key.name: "a",
        key.offset: 3993,
        key.length: 5
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.protocol,
    key.name: "FooProtocolBase",
    key.usr: "c:objc(pl)FooProtocolBase",
    key.doc.full_as_xml: "<Other file=Foo.h line=\"121\" column=\"11\"><Name>FooProtocolBase</Name><USR>c:objc(pl)FooProtocolBase</USR><Declaration>protocol FooProtocolBase</Declaration><Abstract><Para> Aaa.  FooProtocolBase.  Bbb.</Para></Abstract></Other>",
    key.offset: 4009,
    key.length: 301,
    key.fully_annotated_decl: "<decl.protocol><syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>FooProtocolBase</decl.name></decl.protocol>",
    key.entities: [
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "fooProtoFunc()",
        key.usr: "c:objc(pl)FooProtocolBase(im)fooProtoFunc",
        key.doc.full_as_xml: "<Function isInstanceMethod=\"1\" file=Foo.h line=\"125\" column=\"1\"><Name>fooProtoFunc</Name><USR>c:objc(pl)FooProtocolBase(im)fooProtoFunc</USR><Declaration>func fooProtoFunc()</Declaration><Abstract><Para> Aaa.  fooProtoFunc.  Bbb. Ccc.</Para></Abstract></Function>",
        key.offset: 4041,
        key.length: 19,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fooProtoFunc</decl.name>()</decl.function.method.instance>"
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "fooProtoFuncWithExtraIndentation1()",
        key.usr: "c:objc(pl)FooProtocolBase(im)fooProtoFuncWithExtraIndentation1",
        key.doc.full_as_xml: "<Function isInstanceMethod=\"1\" file=Foo.h line=\"129\" column=\"3\"><Name>fooProtoFuncWithExtraIndentation1</Name><USR>c:objc(pl)FooProtocolBase(im)fooProtoFuncWithExtraIndentation1</USR><Declaration>func fooProtoFuncWithExtraIndentation1()</Declaration><Abstract><Para> Aaa.  fooProtoFuncWithExtraIndentation1.  Bbb. Ccc.</Para></Abstract></Function>",
        key.offset: 4066,
        key.length: 40,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fooProtoFuncWithExtraIndentation1</decl.name>()</decl.function.method.instance>"
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "fooProtoFuncWithExtraIndentation2()",
        key.usr: "c:objc(pl)FooProtocolBase(im)fooProtoFuncWithExtraIndentation2",
        key.doc.full_as_xml: "<Function isInstanceMethod=\"1\" file=Foo.h line=\"135\" column=\"3\"><Name>fooProtoFuncWithExtraIndentation2</Name><USR>c:objc(pl)FooProtocolBase(im)fooProtoFuncWithExtraIndentation2</USR><Declaration>func fooProtoFuncWithExtraIndentation2()</Declaration><Abstract><Para> Aaa.  fooProtoFuncWithExtraIndentation2.  Bbb. Ccc.</Para></Abstract></Function>",
        key.offset: 4112,
        key.length: 40,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fooProtoFuncWithExtraIndentation2</decl.name>()</decl.function.method.instance>"
      },
      {
        key.kind: source.lang.swift.decl.function.method.static,
        key.name: "fooProtoClassFunc()",
        key.usr: "c:objc(pl)FooProtocolBase(cm)fooProtoClassFunc",
        key.offset: 4158,
        key.length: 31,
        key.fully_annotated_decl: "<decl.function.method.static><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fooProtoClassFunc</decl.name>()</decl.function.method.static>"
      },
      {
        key.kind: source.lang.swift.decl.var.instance,
        key.name: "fooProperty1",
        key.usr: "c:objc(pl)FooProtocolBase(py)fooProperty1",
        key.offset: 4195,
        key.length: 35,
        key.fully_annotated_decl: "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>fooProperty1</decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.var.instance>"
      },
      {
        key.kind: source.lang.swift.decl.var.instance,
        key.name: "fooProperty2",
        key.usr: "c:objc(pl)FooProtocolBase(py)fooProperty2",
        key.offset: 4236,
        key.length: 35,
        key.fully_annotated_decl: "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>fooProperty2</decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.var.instance>"
      },
      {
        key.kind: source.lang.swift.decl.var.instance,
        key.name: "fooProperty3",
        key.usr: "c:objc(pl)FooProtocolBase(py)fooProperty3",
        key.offset: 4277,
        key.length: 31,
        key.fully_annotated_decl: "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>fooProperty3</decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>"
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.protocol,
    key.name: "FooProtocolDerived",
    key.usr: "c:objc(pl)FooProtocolDerived",
    key.offset: 4311,
    key.length: 49,
    key.fully_annotated_decl: "<decl.protocol><syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>FooProtocolDerived</decl.name> : <ref.protocol usr=\"c:objc(pl)FooProtocolBase\">FooProtocolBase</ref.protocol></decl.protocol>",
    key.conforms: [
      {
        key.kind: source.lang.swift.ref.protocol,
        key.name: "FooProtocolBase",
        key.usr: "c:objc(pl)FooProtocolBase"
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.class,
    key.name: "FooClassBase",
    key.usr: "c:objc(cs)FooClassBase",
    key.offset: 4361,
    key.length: 392,
    key.fully_annotated_decl: "<decl.class><syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FooClassBase</decl.name></decl.class>",
    key.entities: [
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "fooBaseInstanceFunc0()",
        key.usr: "c:objc(cs)FooClassBase(im)fooBaseInstanceFunc0",
        key.offset: 4387,
        key.length: 27,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fooBaseInstanceFunc0</decl.name>()</decl.function.method.instance>"
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "fooBaseInstanceFunc1(_:)",
        key.usr: "c:objc(cs)FooClassBase(im)fooBaseInstanceFunc1:",
        key.offset: 4420,
        key.length: 60,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fooBaseInstanceFunc1</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>anObject</decl.var.parameter.name>: <decl.var.parameter.type>Any!</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:objc(cs)FooClassBase\">FooClassBase</ref.class>!</decl.function.returntype></decl.function.method.instance>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "anObject",
            key.offset: 4458,
            key.length: 4
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.constructor,
        key.name: "init()",
        key.usr: "c:objc(cs)FooClassBase(im)init",
        key.offset: 4486,
        key.length: 7,
        key.fully_annotated_decl: "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>!()</decl.function.constructor>"
      },
      {
        key.kind: source.lang.swift.decl.function.constructor,
        key.name: "init(float:)",
        key.usr: "c:objc(cs)FooClassBase(im)initWithFloat:",
        key.offset: 4499,
        key.length: 33,
        key.fully_annotated_decl: "<decl.function.constructor><syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>!(<decl.var.parameter><decl.var.parameter.argument_label>float</decl.var.parameter.argument_label> <decl.var.parameter.name>f</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "float",
            key.name: "f",
            key.offset: 4526,
            key.length: 5
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "fooBaseInstanceFuncOverridden()",
        key.usr: "c:objc(cs)FooClassBase(im)fooBaseInstanceFuncOverridden",
        key.offset: 4538,
        key.length: 36,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fooBaseInstanceFuncOverridden</decl.name>()</decl.function.method.instance>"
      },
      {
        key.kind: source.lang.swift.decl.function.method.class,
        key.name: "fooBaseClassFunc0()",
        key.usr: "c:objc(cs)FooClassBase(cm)fooBaseClassFunc0",
        key.offset: 4580,
        key.length: 30,
        key.fully_annotated_decl: "<decl.function.method.class><syntaxtype.keyword>class</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fooBaseClassFunc0</decl.name>()</decl.function.method.class>"
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "_internalMeth1()",
        key.usr: "c:objc(cs)FooClassBase(im)_internalMeth1",
        key.offset: 4616,
        key.length: 29,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>_internalMeth1</decl.name>() -&gt; <decl.function.returntype>Any!</decl.function.returntype></decl.function.method.instance>"
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "_internalMeth2()",
        key.usr: "c:objc(cs)FooClassBase(im)_internalMeth2",
        key.offset: 4651,
        key.length: 29,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>_internalMeth2</decl.name>() -&gt; <decl.function.returntype>Any!</decl.function.returntype></decl.function.method.instance>"
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "nonInternalMeth()",
        key.usr: "c:objc(cs)FooClassBase(im)nonInternalMeth",
        key.offset: 4686,
        key.length: 30,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>nonInternalMeth</decl.name>() -&gt; <decl.function.returntype>Any!</decl.function.returntype></decl.function.method.instance>"
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "_internalMeth3()",
        key.usr: "c:objc(cs)FooClassBase(im)_internalMeth3",
        key.offset: 4722,
        key.length: 29,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>_internalMeth3</decl.name>() -&gt; <decl.function.returntype>Any!</decl.function.returntype></decl.function.method.instance>"
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.class,
    key.name: "FooClassDerived",
    key.usr: "c:objc(cs)FooClassDerived",
    key.doc.full_as_xml: "<Other file=Foo.h line=\"158\" column=\"12\"><Name>FooClassDerived</Name><USR>c:objc(cs)FooClassDerived</USR><Declaration>class FooClassDerived : FooClassBase, FooProtocolDerived</Declaration><Abstract><Para> Aaa.  FooClassDerived.  Bbb.</Para></Abstract></Other>",
    key.offset: 4754,
    key.length: 493,
    key.fully_annotated_decl: "<decl.class><syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FooClassDerived</decl.name> : <ref.class usr=\"c:objc(cs)FooClassBase\">FooClassBase</ref.class>, <ref.protocol usr=\"c:objc(pl)FooProtocolDerived\">FooProtocolDerived</ref.protocol></decl.class>",
    key.inherits: [
      {
        key.kind: source.lang.swift.ref.class,
        key.name: "FooClassBase",
        key.usr: "c:objc(cs)FooClassBase"
      }
    ],
    key.conforms: [
      {
        key.kind: source.lang.swift.ref.protocol,
        key.name: "FooProtocolDerived",
        key.usr: "c:objc(pl)FooProtocolDerived"
      }
    ],
    key.entities: [
      {
        key.kind: source.lang.swift.decl.var.instance,
        key.name: "fooProperty1",
        key.usr: "c:objc(cs)FooClassDerived(py)fooProperty1",
        key.offset: 4818,
        key.length: 23,
        key.fully_annotated_decl: "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>fooProperty1</decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.var.instance>"
      },
      {
        key.kind: source.lang.swift.decl.var.instance,
        key.name: "fooProperty2",
        key.usr: "c:objc(cs)FooClassDerived(py)fooProperty2",
        key.offset: 4847,
        key.length: 23,
        key.fully_annotated_decl: "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>fooProperty2</decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.var.instance>"
      },
      {
        key.kind: source.lang.swift.decl.var.instance,
        key.name: "fooProperty3",
        key.usr: "c:objc(cs)FooClassDerived(py)fooProperty3",
        key.offset: 4876,
        key.length: 31,
        key.fully_annotated_decl: "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>fooProperty3</decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>"
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "fooInstanceFunc0()",
        key.usr: "c:objc(cs)FooClassDerived(im)fooInstanceFunc0",
        key.offset: 4913,
        key.length: 23,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fooInstanceFunc0</decl.name>()</decl.function.method.instance>"
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "fooInstanceFunc1(_:)",
        key.usr: "c:objc(cs)FooClassDerived(im)fooInstanceFunc1:",
        key.offset: 4942,
        key.length: 33,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fooInstanceFunc1</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>a</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "a",
            key.offset: 4969,
            key.length: 5
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "fooInstanceFunc2(_:withB:)",
        key.usr: "c:objc(cs)FooClassDerived(im)fooInstanceFunc2:withB:",
        key.offset: 4981,
        key.length: 49,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fooInstanceFunc2</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>a</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>withB</decl.var.parameter.argument_label> <decl.var.parameter.name>b</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "a",
            key.offset: 5008,
            key.length: 5
          },
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "withB",
            key.name: "b",
            key.offset: 5024,
            key.length: 5
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "fooBaseInstanceFuncOverridden()",
        key.usr: "c:objc(cs)FooClassDerived(im)fooBaseInstanceFuncOverridden",
        key.offset: 5036,
        key.length: 36,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fooBaseInstanceFuncOverridden</decl.name>()</decl.function.method.instance>",
        key.inherits: [
          {
            key.kind: source.lang.swift.ref.function.method.instance,
            key.name: "fooBaseInstanceFuncOverridden()",
            key.usr: "c:objc(cs)FooClassBase(im)fooBaseInstanceFuncOverridden"
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.method.class,
        key.name: "fooClassFunc0()",
        key.usr: "c:objc(cs)FooClassDerived(cm)fooClassFunc0",
        key.offset: 5078,
        key.length: 26,
        key.fully_annotated_decl: "<decl.function.method.class><syntaxtype.keyword>class</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fooClassFunc0</decl.name>()</decl.function.method.class>"
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "_internalMeth1()",
        key.usr: "c:objc(cs)FooClassBase(im)_internalMeth1::SYNTHESIZED::c:objc(cs)FooClassDerived",
        key.original_usr: "c:objc(cs)FooClassBase(im)_internalMeth1",
        key.offset: 5110,
        key.length: 29,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>_internalMeth1</decl.name>() -&gt; <decl.function.returntype>Any!</decl.function.returntype></decl.function.method.instance>"
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "_internalMeth2()",
        key.usr: "c:objc(cs)FooClassBase(im)_internalMeth2::SYNTHESIZED::c:objc(cs)FooClassDerived",
        key.original_usr: "c:objc(cs)FooClassBase(im)_internalMeth2",
        key.offset: 5145,
        key.length: 29,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>_internalMeth2</decl.name>() -&gt; <decl.function.returntype>Any!</decl.function.returntype></decl.function.method.instance>"
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "nonInternalMeth()",
        key.usr: "c:objc(cs)FooClassBase(im)nonInternalMeth::SYNTHESIZED::c:objc(cs)FooClassDerived",
        key.original_usr: "c:objc(cs)FooClassBase(im)nonInternalMeth",
        key.offset: 5180,
        key.length: 30,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>nonInternalMeth</decl.name>() -&gt; <decl.function.returntype>Any!</decl.function.returntype></decl.function.method.instance>"
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "_internalMeth3()",
        key.usr: "c:objc(cs)FooClassBase(im)_internalMeth3::SYNTHESIZED::c:objc(cs)FooClassDerived",
        key.original_usr: "c:objc(cs)FooClassBase(im)_internalMeth3",
        key.offset: 5216,
        key.length: 29,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>_internalMeth3</decl.name>() -&gt; <decl.function.returntype>Any!</decl.function.returntype></decl.function.method.instance>"
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.typealias,
    key.name: "typedef_int_t",
    key.usr: "c:Foo.h@T@typedef_int_t",
    key.offset: 5248,
    key.length: 31,
    key.fully_annotated_decl: "<decl.typealias><syntaxtype.keyword>typealias</syntaxtype.keyword> <decl.name>typedef_int_t</decl.name> = <ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.typealias>",
    key.conforms: [
      {
        key.kind: source.lang.swift.ref.protocol,
        key.name: "FixedWidthInteger",
        key.usr: "s:s17FixedWidthIntegerP"
      },
      {
        key.kind: source.lang.swift.ref.protocol,
        key.name: "SignedInteger",
        key.usr: "s:SZ"
      },
      {
        key.kind: source.lang.swift.ref.protocol,
        key.name: "_ExpressibleByBuiltinIntegerLiteral",
        key.usr: "s:s35_ExpressibleByBuiltinIntegerLiteralP"
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.var.global,
    key.name: "FOO_MACRO_1",
    key.usr: "c:Foo.h@3720@macro@FOO_MACRO_1",
    key.offset: 5280,
    key.length: 30,
    key.fully_annotated_decl: "<decl.var.global><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>FOO_MACRO_1</decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.global>"
  },
  {
    key.kind: source.lang.swift.decl.var.global,
    key.name: "FOO_MACRO_2",
    key.usr: "c:Foo.h@3742@macro@FOO_MACRO_2",
    key.offset: 5311,
    key.length: 30,
    key.fully_annotated_decl: "<decl.var.global><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>FOO_MACRO_2</decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.global>"
  },
  {
    key.kind: source.lang.swift.decl.var.global,
    key.name: "FOO_MACRO_3",
    key.usr: "c:Foo.h@3764@macro@FOO_MACRO_3",
    key.offset: 5342,
    key.length: 30,
    key.fully_annotated_decl: "<decl.var.global><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>FOO_MACRO_3</decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.global>"
  },
  {
    key.kind: source.lang.swift.decl.var.global,
    key.name: "FOO_MACRO_4",
    key.usr: "c:Foo.h@3828@macro@FOO_MACRO_4",
    key.offset: 5373,
    key.length: 31,
    key.fully_annotated_decl: "<decl.var.global><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>FOO_MACRO_4</decl.name>: <decl.var.type><ref.struct usr=\"s:s6UInt32V\">UInt32</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.global>"
  },
  {
    key.kind: source.lang.swift.decl.var.global,
    key.name: "FOO_MACRO_5",
    key.usr: "c:Foo.h@3860@macro@FOO_MACRO_5",
    key.offset: 5405,
    key.length: 31,
    key.fully_annotated_decl: "<decl.var.global><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>FOO_MACRO_5</decl.name>: <decl.var.type><ref.struct usr=\"s:s6UInt64V\">UInt64</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.global>"
  },
  {
    key.kind: source.lang.swift.decl.var.global,
    key.name: "FOO_MACRO_6",
    key.usr: "c:Foo.h@3902@macro@FOO_MACRO_6",
    key.offset: 5437,
    key.length: 38,
    key.fully_annotated_decl: "<decl.var.global><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>FOO_MACRO_6</decl.name>: <decl.var.type><ref.typealias usr=\"c:Foo.h@T@typedef_int_t\">typedef_int_t</ref.typealias></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.global>"
  },
  {
    key.kind: source.lang.swift.decl.var.global,
    key.name: "FOO_MACRO_7",
    key.usr: "c:Foo.h@3943@macro@FOO_MACRO_7",
    key.offset: 5476,
    key.length: 38,
    key.fully_annotated_decl: "<decl.var.global><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>FOO_MACRO_7</decl.name>: <decl.var.type><ref.typealias usr=\"c:Foo.h@T@typedef_int_t\">typedef_int_t</ref.typealias></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.global>"
  },
  {
    key.kind: source.lang.swift.decl.var.global,
    key.name: "FOO_MACRO_8",
    key.usr: "c:Foo.h@3984@macro@FOO_MACRO_8",
    key.offset: 5515,
    key.length: 29,
    key.fully_annotated_decl: "<decl.var.global><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>FOO_MACRO_8</decl.name>: <decl.var.type><ref.struct usr=\"s:s4Int8V\">Int8</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.global>"
  },
  {
    key.kind: source.lang.swift.decl.var.global,
    key.name: "FOO_MACRO_9",
    key.usr: "c:Foo.h@4015@macro@FOO_MACRO_9",
    key.offset: 5545,
    key.length: 30,
    key.fully_annotated_decl: "<decl.var.global><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>FOO_MACRO_9</decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.global>"
  },
  {
    key.kind: source.lang.swift.decl.var.global,
    key.name: "FOO_MACRO_10",
    key.usr: "c:Foo.h@4045@macro@FOO_MACRO_10",
    key.offset: 5576,
    key.length: 31,
    key.fully_annotated_decl: "<decl.var.global><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>FOO_MACRO_10</decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int16V\">Int16</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.global>"
  },
  {
    key.kind: source.lang.swift.decl.var.global,
    key.name: "FOO_MACRO_11",
    key.usr: "c:Foo.h@4079@macro@FOO_MACRO_11",
    key.offset: 5608,
    key.length: 29,
    key.fully_annotated_decl: "<decl.var.global><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>FOO_MACRO_11</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.global>"
  },
  {
    key.kind: source.lang.swift.decl.var.global,
    key.name: "FOO_MACRO_OR",
    key.usr: "c:Foo.h@4112@macro@FOO_MACRO_OR",
    key.offset: 5638,
    key.length: 31,
    key.fully_annotated_decl: "<decl.var.global><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>FOO_MACRO_OR</decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.global>"
  },
  {
    key.kind: source.lang.swift.decl.var.global,
    key.name: "FOO_MACRO_AND",
    key.usr: "c:Foo.h@4161@macro@FOO_MACRO_AND",
    key.offset: 5670,
    key.length: 32,
    key.fully_annotated_decl: "<decl.var.global><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>FOO_MACRO_AND</decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.global>"
  },
  {
    key.kind: source.lang.swift.decl.var.global,
    key.name: "FOO_MACRO_BITWIDTH",
    key.usr: "c:Foo.h@4211@macro@FOO_MACRO_BITWIDTH",
    key.offset: 5703,
    key.length: 38,
    key.fully_annotated_decl: "<decl.var.global><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>FOO_MACRO_BITWIDTH</decl.name>: <decl.var.type><ref.struct usr=\"s:s6UInt64V\">UInt64</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.global>"
  },
  {
    key.kind: source.lang.swift.decl.var.global,
    key.name: "FOO_MACRO_SIGNED",
    key.usr: "c:Foo.h@4266@macro@FOO_MACRO_SIGNED",
    key.offset: 5742,
    key.length: 36,
    key.fully_annotated_decl: "<decl.var.global><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>FOO_MACRO_SIGNED</decl.name>: <decl.var.type><ref.struct usr=\"s:s6UInt32V\">UInt32</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.global>"
  },
  {
    key.kind: source.lang.swift.decl.var.global,
    key.name: "FOO_MACRO_REDEF_1",
    key.usr: "c:Foo.h@4477@macro@FOO_MACRO_REDEF_1",
    key.offset: 5779,
    key.length: 36,
    key.fully_annotated_decl: "<decl.var.global><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>FOO_MACRO_REDEF_1</decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.global>"
  },
  {
    key.kind: source.lang.swift.decl.var.global,
    key.name: "FOO_MACRO_REDEF_2",
    key.usr: "c:Foo.h@4534@macro@FOO_MACRO_REDEF_2",
    key.offset: 5816,
    key.length: 36,
    key.fully_annotated_decl: "<decl.var.global><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>FOO_MACRO_REDEF_2</decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.global>"
  },
  {
    key.kind: source.lang.swift.decl.function.free,
    key.name: "theLastDeclInFoo()",
    key.usr: "c:@F@theLastDeclInFoo",
    key.offset: 5853,
    key.length: 23,
    key.fully_annotated_decl: "<decl.function.free><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>theLastDeclInFoo</decl.name>()</decl.function.free>"
  },
  {
    key.kind: source.lang.swift.decl.function.free,
    key.name: "_internalTopLevelFunc()",
    key.usr: "c:@F@_internalTopLevelFunc",
    key.offset: 5877,
    key.length: 28,
    key.fully_annotated_decl: "<decl.function.free><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>_internalTopLevelFunc</decl.name>()</decl.function.free>"
  },
  {
    key.kind: source.lang.swift.decl.struct,
    key.name: "_InternalStruct",
    key.usr: "c:@S@_InternalStruct",
    key.offset: 5906,
    key.length: 78,
    key.fully_annotated_decl: "<decl.struct><syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>_InternalStruct</decl.name></decl.struct>",
    key.entities: [
      {
        key.kind: source.lang.swift.decl.var.instance,
        key.name: "x",
        key.usr: "c:@S@_InternalStruct@FI@x",
        key.offset: 5936,
        key.length: 12,
        key.fully_annotated_decl: "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>x</decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.type></decl.var.instance>"
      },
      {
        key.kind: source.lang.swift.decl.function.constructor,
        key.name: "init()",
        key.usr: "s:So15_InternalStructVABycfc",
        key.offset: 5954,
        key.length: 6,
        key.fully_annotated_decl: "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>()</decl.function.constructor>"
      },
      {
        key.kind: source.lang.swift.decl.function.constructor,
        key.name: "init(x:)",
        key.usr: "s:So15_InternalStructV1xABs5Int32V_tcfc",
        key.offset: 5966,
        key.length: 16,
        key.fully_annotated_decl: "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>x</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "x",
            key.name: "x",
            key.offset: 5976,
            key.length: 5
          }
        ]
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.extension.class,
    key.offset: 5985,
    key.length: 61,
    key.extends: {
      key.kind: source.lang.swift.ref.class,
      key.name: "FooClassBase",
      key.usr: "c:objc(cs)FooClassBase"
    },
    key.entities: [
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "_internalMeth1()",
        key.usr: "c:objc(cs)FooClassBase(im)_internalMeth1",
        key.offset: 6015,
        key.length: 29,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>_internalMeth1</decl.name>() -&gt; <decl.function.returntype>Any!</decl.function.returntype></decl.function.method.instance>"
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.extension.class,
    key.offset: 6047,
    key.length: 97,
    key.extends: {
      key.kind: source.lang.swift.ref.class,
      key.name: "FooClassBase",
      key.usr: "c:objc(cs)FooClassBase"
    },
    key.entities: [
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "_internalMeth2()",
        key.usr: "c:objc(cs)FooClassBase(im)_internalMeth2",
        key.offset: 6077,
        key.length: 29,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>_internalMeth2</decl.name>() -&gt; <decl.function.returntype>Any!</decl.function.returntype></decl.function.method.instance>"
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "nonInternalMeth()",
        key.usr: "c:objc(cs)FooClassBase(im)nonInternalMeth",
        key.offset: 6112,
        key.length: 30,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>nonInternalMeth</decl.name>() -&gt; <decl.function.returntype>Any!</decl.function.returntype></decl.function.method.instance>"
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.extension.class,
    key.offset: 6145,
    key.length: 61,
    key.extends: {
      key.kind: source.lang.swift.ref.class,
      key.name: "FooClassBase",
      key.usr: "c:objc(cs)FooClassBase"
    },
    key.entities: [
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "_internalMeth3()",
        key.usr: "c:objc(cs)FooClassBase(im)_internalMeth3",
        key.offset: 6175,
        key.length: 29,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>_internalMeth3</decl.name>() -&gt; <decl.function.returntype>Any!</decl.function.returntype></decl.function.method.instance>"
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.protocol,
    key.name: "_InternalProt",
    key.usr: "c:objc(pl)_InternalProt",
    key.offset: 6207,
    key.length: 26,
    key.fully_annotated_decl: "<decl.protocol><syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>_InternalProt</decl.name></decl.protocol>"
  },
  {
    key.kind: source.lang.swift.decl.class,
    key.name: "ClassWithInternalProt",
    key.usr: "c:objc(cs)ClassWithInternalProt",
    key.offset: 6234,
    key.length: 47,
    key.fully_annotated_decl: "<decl.class><syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>ClassWithInternalProt</decl.name> : <ref.protocol usr=\"c:objc(pl)_InternalProt\">_InternalProt</ref.protocol></decl.class>",
    key.conforms: [
      {
        key.kind: source.lang.swift.ref.protocol,
        key.name: "_InternalProt",
        key.usr: "c:objc(pl)_InternalProt"
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.class,
    key.name: "FooClassPropertyOwnership",
    key.usr: "c:objc(cs)FooClassPropertyOwnership",
    key.offset: 6282,
    key.length: 425,
    key.fully_annotated_decl: "<decl.class><syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FooClassPropertyOwnership</decl.name> : <ref.class usr=\"c:objc(cs)FooClassBase\">FooClassBase</ref.class></decl.class>",
    key.inherits: [
      {
        key.kind: source.lang.swift.ref.class,
        key.name: "FooClassBase",
        key.usr: "c:objc(cs)FooClassBase"
      }
    ],
    key.entities: [
      {
        key.kind: source.lang.swift.decl.var.instance,
        key.name: "assignable",
        key.usr: "c:objc(cs)FooClassPropertyOwnership(py)assignable",
        key.offset: 6336,
        key.length: 42,
        key.fully_annotated_decl: "<decl.var.instance><syntaxtype.keyword>unowned(unsafe)</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>assignable</decl.name>: <decl.var.type>AnyObject!</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.var.instance>"
      },
      {
        key.kind: source.lang.swift.decl.var.instance,
        key.name: "unsafeAssignable",
        key.usr: "c:objc(cs)FooClassPropertyOwnership(py)unsafeAssignable",
        key.offset: 6384,
        key.length: 48,
        key.fully_annotated_decl: "<decl.var.instance><syntaxtype.keyword>unowned(unsafe)</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>unsafeAssignable</decl.name>: <decl.var.type>AnyObject!</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.var.instance>"
      },
      {
        key.kind: source.lang.swift.decl.var.instance,
        key.name: "retainable",
        key.usr: "c:objc(cs)FooClassPropertyOwnership(py)retainable",
        key.offset: 6438,
        key.length: 20,
        key.fully_annotated_decl: "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>retainable</decl.name>: <decl.var.type>Any!</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.var.instance>"
      },
      {
        key.kind: source.lang.swift.decl.var.instance,
        key.name: "strongRef",
        key.usr: "c:objc(cs)FooClassPropertyOwnership(py)strongRef",
        key.offset: 6464,
        key.length: 19,
        key.fully_annotated_decl: "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>strongRef</decl.name>: <decl.var.type>Any!</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.var.instance>"
      },
      {
        key.kind: source.lang.swift.decl.var.instance,
        key.name: "copyable",
        key.usr: "c:objc(cs)FooClassPropertyOwnership(py)copyable",
        key.offset: 6489,
        key.length: 18,
        key.fully_annotated_decl: "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>copyable</decl.name>: <decl.var.type>Any!</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.var.instance>"
      },
      {
        key.kind: source.lang.swift.decl.var.instance,
        key.name: "weakRef",
        key.usr: "c:objc(cs)FooClassPropertyOwnership(py)weakRef",
        key.offset: 6513,
        key.length: 28,
        key.fully_annotated_decl: "<decl.var.instance><syntaxtype.keyword>weak</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>weakRef</decl.name>: <decl.var.type>AnyObject!</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.var.instance>"
      },
      {
        key.kind: source.lang.swift.decl.var.instance,
        key.name: "scalar",
        key.usr: "c:objc(cs)FooClassPropertyOwnership(py)scalar",
        key.offset: 6547,
        key.length: 17,
        key.fully_annotated_decl: "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>scalar</decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.var.instance>"
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "_internalMeth1()",
        key.usr: "c:objc(cs)FooClassBase(im)_internalMeth1::SYNTHESIZED::c:objc(cs)FooClassPropertyOwnership",
        key.original_usr: "c:objc(cs)FooClassBase(im)_internalMeth1",
        key.offset: 6570,
        key.length: 29,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>_internalMeth1</decl.name>() -&gt; <decl.function.returntype>Any!</decl.function.returntype></decl.function.method.instance>"
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "_internalMeth2()",
        key.usr: "c:objc(cs)FooClassBase(im)_internalMeth2::SYNTHESIZED::c:objc(cs)FooClassPropertyOwnership",
        key.original_usr: "c:objc(cs)FooClassBase(im)_internalMeth2",
        key.offset: 6605,
        key.length: 29,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>_internalMeth2</decl.name>() -&gt; <decl.function.returntype>Any!</decl.function.returntype></decl.function.method.instance>"
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "nonInternalMeth()",
        key.usr: "c:objc(cs)FooClassBase(im)nonInternalMeth::SYNTHESIZED::c:objc(cs)FooClassPropertyOwnership",
        key.original_usr: "c:objc(cs)FooClassBase(im)nonInternalMeth",
        key.offset: 6640,
        key.length: 30,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>nonInternalMeth</decl.name>() -&gt; <decl.function.returntype>Any!</decl.function.returntype></decl.function.method.instance>"
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "_internalMeth3()",
        key.usr: "c:objc(cs)FooClassBase(im)_internalMeth3::SYNTHESIZED::c:objc(cs)FooClassPropertyOwnership",
        key.original_usr: "c:objc(cs)FooClassBase(im)_internalMeth3",
        key.offset: 6676,
        key.length: 29,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>_internalMeth3</decl.name>() -&gt; <decl.function.returntype>Any!</decl.function.returntype></decl.function.method.instance>"
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.var.global,
    key.name: "FOO_NIL",
    key.usr: "c:Foo.h@5323@macro@FOO_NIL",
    key.offset: 6708,
    key.length: 15,
    key.fully_annotated_decl: "<decl.var.global><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>FOO_NIL</decl.name>: <decl.var.type><tuple>()</tuple></decl.var.type></decl.var.global>",
    key.attributes: [
      {
        key.kind: source.lang.swift.attribute.availability,
        key.is_unavailable: 1,
        key.message: "use 'nil' instead of this imported macro"
      }
    ],
    key.is_unavailable: 1
  },
  {
    key.kind: source.lang.swift.decl.class,
    key.name: "FooUnavailableMembers",
    key.usr: "c:objc(cs)FooUnavailableMembers",
    key.offset: 6724,
    key.length: 592,
    key.fully_annotated_decl: "<decl.class><syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FooUnavailableMembers</decl.name> : <ref.class usr=\"c:objc(cs)FooClassBase\">FooClassBase</ref.class></decl.class>",
    key.inherits: [
      {
        key.kind: source.lang.swift.ref.class,
        key.name: "FooClassBase",
        key.usr: "c:objc(cs)FooClassBase"
      }
    ],
    key.entities: [
      {
        key.kind: source.lang.swift.decl.function.constructor,
        key.name: "init(int:)",
        key.usr: "c:objc(cs)FooUnavailableMembers(cm)unavailableMembersWithInt:",
        key.offset: 6774,
        key.length: 31,
        key.fully_annotated_decl: "<decl.function.constructor><syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>!(<decl.var.parameter><decl.var.parameter.argument_label>int</decl.var.parameter.argument_label> <decl.var.parameter.name>i</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "int",
            key.name: "i",
            key.offset: 6799,
            key.length: 5
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "unavailable()",
        key.usr: "c:objc(cs)FooUnavailableMembers(im)unavailable",
        key.offset: 6811,
        key.length: 18,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>unavailable</decl.name>()</decl.function.method.instance>",
        key.attributes: [
          {
            key.kind: source.lang.swift.attribute.availability,
            key.is_unavailable: 1,
            key.message: "x"
          }
        ],
        key.is_unavailable: 1
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "swiftUnavailable()",
        key.usr: "c:objc(cs)FooUnavailableMembers(im)swiftUnavailable",
        key.offset: 6835,
        key.length: 23,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>swiftUnavailable</decl.name>()</decl.function.method.instance>",
        key.attributes: [
          {
            key.kind: source.lang.swift.attribute.availability,
            key.is_unavailable: 1
          }
        ],
        key.is_unavailable: 1
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "deprecated()",
        key.usr: "c:objc(cs)FooUnavailableMembers(im)deprecated",
        key.offset: 6864,
        key.length: 17,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>deprecated</decl.name>()</decl.function.method.instance>",
        key.attributes: [
          {
            key.kind: source.lang.swift.attribute.availability,
            key.is_deprecated: 1,
            key.message: "x"
          }
        ],
        key.is_deprecated: 1
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "availabilityIntroduced()",
        key.usr: "c:objc(cs)FooUnavailableMembers(im)availabilityIntroduced",
        key.offset: 6887,
        key.length: 29,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>availabilityIntroduced</decl.name>()</decl.function.method.instance>",
        key.attributes: [
          {
            key.kind: source.lang.swift.attribute.availability,
            key.platform: source.availability.platform.osx,
            key.introduced: "10.1"
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "availabilityDeprecated()",
        key.usr: "c:objc(cs)FooUnavailableMembers(im)availabilityDeprecated",
        key.offset: 6922,
        key.length: 29,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>availabilityDeprecated</decl.name>()</decl.function.method.instance>",
        key.attributes: [
          {
            key.kind: source.lang.swift.attribute.availability,
            key.platform: source.availability.platform.osx,
            key.is_unavailable: 1,
            key.message: "APIs deprecated as of OS X 10.9 and earlier are unavailable in Swift",
            key.deprecated: "10.1"
          }
        ],
        key.is_deprecated: 1,
        key.is_unavailable: 1
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "availabilityObsoleted()",
        key.usr: "c:objc(cs)FooUnavailableMembers(im)availabilityObsoleted",
        key.offset: 6957,
        key.length: 28,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>availabilityObsoleted</decl.name>()</decl.function.method.instance>",
        key.attributes: [
          {
            key.kind: source.lang.swift.attribute.availability,
            key.platform: source.availability.platform.osx,
            key.obsoleted: "10.1"
          }
        ],
        key.is_unavailable: 1
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "availabilityUnavailable()",
        key.usr: "c:objc(cs)FooUnavailableMembers(im)availabilityUnavailable",
        key.offset: 6991,
        key.length: 30,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>availabilityUnavailable</decl.name>()</decl.function.method.instance>",
        key.attributes: [
          {
            key.kind: source.lang.swift.attribute.availability,
            key.platform: source.availability.platform.osx,
            key.is_unavailable: 1
          }
        ],
        key.is_unavailable: 1
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "availabilityIntroducedMsg()",
        key.usr: "c:objc(cs)FooUnavailableMembers(im)availabilityIntroducedMsg",
        key.offset: 7027,
        key.length: 32,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>availabilityIntroducedMsg</decl.name>()</decl.function.method.instance>",
        key.attributes: [
          {
            key.kind: source.lang.swift.attribute.availability,
            key.platform: source.availability.platform.osx,
            key.message: "x",
            key.introduced: "10.1"
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "availabilityDeprecatedMsg()",
        key.usr: "c:objc(cs)FooUnavailableMembers(im)availabilityDeprecatedMsg",
        key.offset: 7065,
        key.length: 32,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>availabilityDeprecatedMsg</decl.name>()</decl.function.method.instance>",
        key.attributes: [
          {
            key.kind: source.lang.swift.attribute.availability,
            key.platform: source.availability.platform.osx,
            key.is_unavailable: 1,
            key.message: "x",
            key.deprecated: "10.1"
          }
        ],
        key.is_deprecated: 1,
        key.is_unavailable: 1
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "availabilityObsoletedMsg()",
        key.usr: "c:objc(cs)FooUnavailableMembers(im)availabilityObsoletedMsg",
        key.offset: 7103,
        key.length: 31,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>availabilityObsoletedMsg</decl.name>()</decl.function.method.instance>",
        key.attributes: [
          {
            key.kind: source.lang.swift.attribute.availability,
            key.platform: source.availability.platform.osx,
            key.message: "x",
            key.obsoleted: "10.1"
          }
        ],
        key.is_unavailable: 1
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "availabilityUnavailableMsg()",
        key.usr: "c:objc(cs)FooUnavailableMembers(im)availabilityUnavailableMsg",
        key.offset: 7140,
        key.length: 33,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>availabilityUnavailableMsg</decl.name>()</decl.function.method.instance>",
        key.attributes: [
          {
            key.kind: source.lang.swift.attribute.availability,
            key.platform: source.availability.platform.osx,
            key.is_unavailable: 1,
            key.message: "x"
          }
        ],
        key.is_unavailable: 1
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "_internalMeth1()",
        key.usr: "c:objc(cs)FooClassBase(im)_internalMeth1::SYNTHESIZED::c:objc(cs)FooUnavailableMembers",
        key.original_usr: "c:objc(cs)FooClassBase(im)_internalMeth1",
        key.offset: 7179,
        key.length: 29,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>_internalMeth1</decl.name>() -&gt; <decl.function.returntype>Any!</decl.function.returntype></decl.function.method.instance>"
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "_internalMeth2()",
        key.usr: "c:objc(cs)FooClassBase(im)_internalMeth2::SYNTHESIZED::c:objc(cs)FooUnavailableMembers",
        key.original_usr: "c:objc(cs)FooClassBase(im)_internalMeth2",
        key.offset: 7214,
        key.length: 29,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>_internalMeth2</decl.name>() -&gt; <decl.function.returntype>Any!</decl.function.returntype></decl.function.method.instance>"
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "nonInternalMeth()",
        key.usr: "c:objc(cs)FooClassBase(im)nonInternalMeth::SYNTHESIZED::c:objc(cs)FooUnavailableMembers",
        key.original_usr: "c:objc(cs)FooClassBase(im)nonInternalMeth",
        key.offset: 7249,
        key.length: 30,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>nonInternalMeth</decl.name>() -&gt; <decl.function.returntype>Any!</decl.function.returntype></decl.function.method.instance>"
      },
      {
        key.kind: source.lang.swift.decl.function.method.instance,
        key.name: "_internalMeth3()",
        key.usr: "c:objc(cs)FooClassBase(im)_internalMeth3::SYNTHESIZED::c:objc(cs)FooUnavailableMembers",
        key.original_usr: "c:objc(cs)FooClassBase(im)_internalMeth3",
        key.offset: 7285,
        key.length: 29,
        key.fully_annotated_decl: "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>_internalMeth3</decl.name>() -&gt; <decl.function.returntype>Any!</decl.function.returntype></decl.function.method.instance>"
      }
    ]
  },
  {
    key.kind: source.lang.swift.decl.class,
    key.name: "FooCFType",
    key.usr: "c:Foo.h@T@FooCFTypeRef",
    key.offset: 7317,
    key.length: 19,
    key.fully_annotated_decl: "<decl.class><syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FooCFType</decl.name></decl.class>"
  },
  {
    key.kind: source.lang.swift.decl.function.free,
    key.name: "FooCFTypeRelease(_:)",
    key.usr: "c:@F@FooCFTypeRelease",
    key.offset: 7337,
    key.length: 38,
    key.fully_annotated_decl: "<decl.function.free><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>FooCFTypeRelease</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:Foo.h@T@FooCFTypeRef\">FooCFType</ref.class>!</decl.var.parameter.type></decl.var.parameter>)</decl.function.free>",
    key.entities: [
      {
        key.kind: source.lang.swift.decl.var.local,
        key.keyword: "_",
        key.offset: 7364,
        key.length: 10
      }
    ],
    key.attributes: [
      {
        key.kind: source.lang.swift.attribute.availability,
        key.is_unavailable: 1,
        key.message: "Core Foundation objects are automatically memory managed"
      }
    ],
    key.is_unavailable: 1
  },
  {
    key.kind: source.lang.swift.decl.enum,
    key.name: "ABAuthorizationStatus",
    key.usr: "c:@E@ABAuthorizationStatus",
    key.offset: 7376,
    key.length: 170,
    key.fully_annotated_decl: "<decl.enum><syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>ABAuthorizationStatus</decl.name> : <ref.struct usr=\"s:Si\">Int</ref.struct></decl.enum>",
    key.inherits: [
      {
        key.kind: source.lang.swift.ref.struct,
        key.name: "Int",
        key.usr: "s:Si"
      }
    ],
    key.entities: [
      {
        key.kind: source.lang.swift.decl.enumelement,
        key.name: "notDetermined",
        key.usr: "c:@E@ABAuthorizationStatus@kABAuthorizationStatusNotDetermined",
        key.offset: 7416,
        key.length: 18,
        key.fully_annotated_decl: "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>notDetermined</decl.name> = <syntaxtype.number>0</syntaxtype.number></decl.enumelement>",
        key.attributes: [
          {
            key.kind: source.lang.swift.attribute.availability,
            key.is_deprecated: 1,
            key.message: "use CNAuthorizationStatus"
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.enumelement,
        key.name: "restricted",
        key.usr: "c:@E@ABAuthorizationStatus@kABAuthorizationStatusRestricted",
        key.offset: 7440,
        key.length: 15,
        key.fully_annotated_decl: "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>restricted</decl.name> = <syntaxtype.number>1</syntaxtype.number></decl.enumelement>",
        key.attributes: [
          {
            key.kind: source.lang.swift.attribute.availability,
            key.is_deprecated: 1,
            key.message: "use CNAuthorizationStatus"
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.operator.infix,
        key.name: "!=(_:_:)",
        key.usr: "s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::c:@E@ABAuthorizationStatus",
        key.original_usr: "s:SQsE2neoiySbx_xtFZ",
        key.doc.full_as_xml: "<Function><Name>!=(_:_:)</Name><USR>s:SQsE2neoiySbx_xtFZ</USR><Declaration>static func != (lhs: Self, rhs: Self) -&gt; Bool</Declaration><CommentParts><Abstract><Para>Returns a Boolean value indicating whether two values are not equal.</Para></Abstract><Parameters><Parameter><Name>lhs</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>A value to compare.</Para></Discussion></Parameter><Parameter><Name>rhs</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Another value to compare.</Para></Discussion></Parameter></Parameters><Discussion><Para>Inequality is the inverse of equality. For any values <codeVoice>a</codeVoice> and <codeVoice>b</codeVoice>, <codeVoice>a != b</codeVoice> implies that <codeVoice>a == b</codeVoice> is <codeVoice>false</codeVoice>.</Para><Para>This is the default implementation of the not-equal-to operator (<codeVoice>!=</codeVoice>) for any type that conforms to <codeVoice>Equatable</codeVoice>.</Para></Discussion></CommentParts></Function>",
        key.offset: 7461,
        key.length: 83,
        key.fully_annotated_decl: "<decl.function.operator.infix><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>!= </decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"c:@E@ABAuthorizationStatus\">ABAuthorizationStatus</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"c:@E@ABAuthorizationStatus\">ABAuthorizationStatus</ref.enum></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype></decl.function.operator.infix>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "lhs",
            key.offset: 7484,
            key.length: 21
          },
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "rhs",
            key.offset: 7514,
            key.length: 21
          }
        ]
      }
    ],
    key.attributes: [
      {
        key.kind: source.lang.swift.attribute.availability,
        key.is_deprecated: 1,
        key.message: "use CNAuthorizationStatus"
      }
    ],
    key.is_deprecated: 1
  },
  {
    key.kind: source.lang.swift.decl.function.free,
    key.name: "fooSubFunc1(_:)",
    key.usr: "c:@F@fooSubFunc1",
    key.offset: 7547,
    key.length: 37,
    key.fully_annotated_decl: "<decl.function.free><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fooSubFunc1</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>a</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.function.returntype></decl.function.free>",
    key.entities: [
      {
        key.kind: source.lang.swift.decl.var.local,
        key.keyword: "_",
        key.name: "a",
        key.offset: 7569,
        key.length: 5
      }
    ],
    key.modulename: "Foo.FooSub"
  },
  {
    key.kind: source.lang.swift.decl.struct,
    key.name: "FooSubEnum1",
    key.usr: "c:@E@FooSubEnum1",
    key.offset: 7585,
    key.length: 214,
    key.fully_annotated_decl: "<decl.struct><syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>FooSubEnum1</decl.name> : <ref.protocol usr=\"s:SQ\">Equatable</ref.protocol>, <ref.protocol usr=\"s:SY\">RawRepresentable</ref.protocol></decl.struct>",
    key.conforms: [
      {
        key.kind: source.lang.swift.ref.protocol,
        key.name: "Equatable",
        key.usr: "s:SQ"
      },
      {
        key.kind: source.lang.swift.ref.protocol,
        key.name: "RawRepresentable",
        key.usr: "s:SY"
      }
    ],
    key.entities: [
      {
        key.kind: source.lang.swift.decl.function.constructor,
        key.name: "init(_:)",
        key.usr: "s:So11FooSubEnum1VyABs6UInt32Vcfc",
        key.offset: 7641,
        key.length: 24,
        key.fully_annotated_decl: "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>rawValue</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "rawValue",
            key.offset: 7658,
            key.length: 6
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.function.constructor,
        key.name: "init(rawValue:)",
        key.usr: "s:So11FooSubEnum1V8rawValueABs6UInt32V_tcfc",
        key.offset: 7671,
        key.length: 31,
        key.fully_annotated_decl: "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>rawValue</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "rawValue",
            key.name: "rawValue",
            key.offset: 7695,
            key.length: 6
          }
        ]
      },
      {
        key.kind: source.lang.swift.decl.var.instance,
        key.name: "rawValue",
        key.usr: "s:So11FooSubEnum1V8rawValues6UInt32Vvp",
        key.offset: 7708,
        key.length: 20,
        key.fully_annotated_decl: "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>rawValue</decl.name>: <decl.var.type><ref.struct usr=\"s:s6UInt32V\">UInt32</ref.struct></decl.var.type></decl.var.instance>"
      },
      {
        key.kind: source.lang.swift.decl.function.operator.infix,
        key.name: "!=(_:_:)",
        key.usr: "s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::c:@E@FooSubEnum1",
        key.original_usr: "s:SQsE2neoiySbx_xtFZ",
        key.doc.full_as_xml: "<Function><Name>!=(_:_:)</Name><USR>s:SQsE2neoiySbx_xtFZ</USR><Declaration>static func != (lhs: Self, rhs: Self) -&gt; Bool</Declaration><CommentParts><Abstract><Para>Returns a Boolean value indicating whether two values are not equal.</Para></Abstract><Parameters><Parameter><Name>lhs</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>A value to compare.</Para></Discussion></Parameter><Parameter><Name>rhs</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Another value to compare.</Para></Discussion></Parameter></Parameters><Discussion><Para>Inequality is the inverse of equality. For any values <codeVoice>a</codeVoice> and <codeVoice>b</codeVoice>, <codeVoice>a != b</codeVoice> implies that <codeVoice>a == b</codeVoice> is <codeVoice>false</codeVoice>.</Para><Para>This is the default implementation of the not-equal-to operator (<codeVoice>!=</codeVoice>) for any type that conforms to <codeVoice>Equatable</codeVoice>.</Para></Discussion></CommentParts></Function>",
        key.offset: 7734,
        key.length: 63,
        key.fully_annotated_decl: "<decl.function.operator.infix><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>!= </decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@E@FooSubEnum1\">FooSubEnum1</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@E@FooSubEnum1\">FooSubEnum1</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype></decl.function.operator.infix>",
        key.entities: [
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "lhs",
            key.offset: 7757,
            key.length: 11
          },
          {
            key.kind: source.lang.swift.decl.var.local,
            key.keyword: "_",
            key.name: "rhs",
            key.offset: 7777,
            key.length: 11
          }
        ]
      }
    ],
    key.modulename: "Foo.FooSub"
  },
  {
    key.kind: source.lang.swift.decl.var.global,
    key.name: "FooSubEnum1X",
    key.usr: "c:@E@FooSubEnum1@FooSubEnum1X",
    key.offset: 7800,
    key.length: 37,
    key.fully_annotated_decl: "<decl.var.global><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>FooSubEnum1X</decl.name>: <decl.var.type><ref.struct usr=\"c:@E@FooSubEnum1\">FooSubEnum1</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.global>",
    key.modulename: "Foo.FooSub"
  },
  {
    key.kind: source.lang.swift.decl.var.global,
    key.name: "FooSubEnum1Y",
    key.usr: "c:@E@FooSubEnum1@FooSubEnum1Y",
    key.offset: 7838,
    key.length: 37,
    key.fully_annotated_decl: "<decl.var.global><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>FooSubEnum1Y</decl.name>: <decl.var.type><ref.struct usr=\"c:@E@FooSubEnum1\">FooSubEnum1</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.global>",
    key.modulename: "Foo.FooSub"
  },
  {
    key.kind: source.lang.swift.decl.var.global,
    key.name: "FooSubUnnamedEnumeratorA1",
    key.usr: "c:@Ea@FooSubUnnamedEnumeratorA1@FooSubUnnamedEnumeratorA1",
    key.offset: 7876,
    key.length: 42,
    key.fully_annotated_decl: "<decl.var.global><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>FooSubUnnamedEnumeratorA1</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.global>",
    key.modulename: "Foo.FooSub"
  }
]
